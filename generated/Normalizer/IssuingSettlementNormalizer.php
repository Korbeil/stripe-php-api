<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Normalizer;

use Jane\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class IssuingSettlementNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Stripe\\Api\\Model\\IssuingSettlement';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Stripe\Api\Model\IssuingSettlement;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        if (isset($data->{'$ref'})) {
            return new Reference($data->{'$ref'}, $context['document-origin']);
        }
        $object = new \Stripe\Api\Model\IssuingSettlement();
        if (property_exists($data, 'bin')) {
            $object->setBin($data->{'bin'});
        }
        if (property_exists($data, 'clearing_date')) {
            $object->setClearingDate($data->{'clearing_date'});
        }
        if (property_exists($data, 'created')) {
            $object->setCreated($data->{'created'});
        }
        if (property_exists($data, 'currency')) {
            $object->setCurrency($data->{'currency'});
        }
        if (property_exists($data, 'id')) {
            $object->setId($data->{'id'});
        }
        if (property_exists($data, 'interchange_fees')) {
            $object->setInterchangeFees($data->{'interchange_fees'});
        }
        if (property_exists($data, 'livemode')) {
            $object->setLivemode($data->{'livemode'});
        }
        if (property_exists($data, 'metadata')) {
            $object->setMetadata($data->{'metadata'});
        }
        if (property_exists($data, 'net_total')) {
            $object->setNetTotal($data->{'net_total'});
        }
        if (property_exists($data, 'network_fees')) {
            $object->setNetworkFees($data->{'network_fees'});
        }
        if (property_exists($data, 'network_settlement_identifier')) {
            $object->setNetworkSettlementIdentifier($data->{'network_settlement_identifier'});
        }
        if (property_exists($data, 'object')) {
            $object->setObject($data->{'object'});
        }
        if (property_exists($data, 'settlement_service')) {
            $object->setSettlementService($data->{'settlement_service'});
        }
        if (property_exists($data, 'transaction_count')) {
            $object->setTransactionCount($data->{'transaction_count'});
        }
        if (property_exists($data, 'transaction_volume')) {
            $object->setTransactionVolume($data->{'transaction_volume'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getBin()) {
            $data->{'bin'} = $object->getBin();
        }
        if (null !== $object->getClearingDate()) {
            $data->{'clearing_date'} = $object->getClearingDate();
        }
        if (null !== $object->getCreated()) {
            $data->{'created'} = $object->getCreated();
        }
        if (null !== $object->getCurrency()) {
            $data->{'currency'} = $object->getCurrency();
        }
        if (null !== $object->getId()) {
            $data->{'id'} = $object->getId();
        }
        if (null !== $object->getInterchangeFees()) {
            $data->{'interchange_fees'} = $object->getInterchangeFees();
        }
        if (null !== $object->getLivemode()) {
            $data->{'livemode'} = $object->getLivemode();
        }
        if (null !== $object->getMetadata()) {
            $data->{'metadata'} = $object->getMetadata();
        }
        if (null !== $object->getNetTotal()) {
            $data->{'net_total'} = $object->getNetTotal();
        }
        if (null !== $object->getNetworkFees()) {
            $data->{'network_fees'} = $object->getNetworkFees();
        }
        if (null !== $object->getNetworkSettlementIdentifier()) {
            $data->{'network_settlement_identifier'} = $object->getNetworkSettlementIdentifier();
        }
        if (null !== $object->getObject()) {
            $data->{'object'} = $object->getObject();
        }
        if (null !== $object->getSettlementService()) {
            $data->{'settlement_service'} = $object->getSettlementService();
        }
        if (null !== $object->getTransactionCount()) {
            $data->{'transaction_count'} = $object->getTransactionCount();
        }
        if (null !== $object->getTransactionVolume()) {
            $data->{'transaction_volume'} = $object->getTransactionVolume();
        }

        return $data;
    }
}
