<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Normalizer;

use Jane\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class TransferNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Stripe\\Api\\Model\\Transfer';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Stripe\Api\Model\Transfer;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        if (isset($data->{'$ref'})) {
            return new Reference($data->{'$ref'}, $context['document-origin']);
        }
        $object = new \Stripe\Api\Model\Transfer();
        if (property_exists($data, 'amount')) {
            $object->setAmount($data->{'amount'});
        }
        if (property_exists($data, 'amount_reversed')) {
            $object->setAmountReversed($data->{'amount_reversed'});
        }
        if (property_exists($data, 'balance_transaction')) {
            $object->setBalanceTransaction($data->{'balance_transaction'});
        }
        if (property_exists($data, 'created')) {
            $object->setCreated($data->{'created'});
        }
        if (property_exists($data, 'currency')) {
            $object->setCurrency($data->{'currency'});
        }
        if (property_exists($data, 'description')) {
            $object->setDescription($data->{'description'});
        }
        if (property_exists($data, 'destination')) {
            $object->setDestination($data->{'destination'});
        }
        if (property_exists($data, 'destination_payment')) {
            $object->setDestinationPayment($data->{'destination_payment'});
        }
        if (property_exists($data, 'id')) {
            $object->setId($data->{'id'});
        }
        if (property_exists($data, 'livemode')) {
            $object->setLivemode($data->{'livemode'});
        }
        if (property_exists($data, 'metadata')) {
            $object->setMetadata($data->{'metadata'});
        }
        if (property_exists($data, 'object')) {
            $object->setObject($data->{'object'});
        }
        if (property_exists($data, 'reversals')) {
            $object->setReversals($this->denormalizer->denormalize($data->{'reversals'}, 'Stripe\\Api\\Model\\TransferReversals', 'json', $context));
        }
        if (property_exists($data, 'reversed')) {
            $object->setReversed($data->{'reversed'});
        }
        if (property_exists($data, 'source_transaction')) {
            $object->setSourceTransaction($data->{'source_transaction'});
        }
        if (property_exists($data, 'source_type')) {
            $object->setSourceType($data->{'source_type'});
        }
        if (property_exists($data, 'transfer_group')) {
            $object->setTransferGroup($data->{'transfer_group'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAmount()) {
            $data->{'amount'} = $object->getAmount();
        }
        if (null !== $object->getAmountReversed()) {
            $data->{'amount_reversed'} = $object->getAmountReversed();
        }
        if (null !== $object->getBalanceTransaction()) {
            $data->{'balance_transaction'} = $object->getBalanceTransaction();
        }
        if (null !== $object->getCreated()) {
            $data->{'created'} = $object->getCreated();
        }
        if (null !== $object->getCurrency()) {
            $data->{'currency'} = $object->getCurrency();
        }
        if (null !== $object->getDescription()) {
            $data->{'description'} = $object->getDescription();
        }
        if (null !== $object->getDestination()) {
            $data->{'destination'} = $object->getDestination();
        }
        if (null !== $object->getDestinationPayment()) {
            $data->{'destination_payment'} = $object->getDestinationPayment();
        }
        if (null !== $object->getId()) {
            $data->{'id'} = $object->getId();
        }
        if (null !== $object->getLivemode()) {
            $data->{'livemode'} = $object->getLivemode();
        }
        if (null !== $object->getMetadata()) {
            $data->{'metadata'} = $object->getMetadata();
        }
        if (null !== $object->getObject()) {
            $data->{'object'} = $object->getObject();
        }
        if (null !== $object->getReversals()) {
            $data->{'reversals'} = $this->normalizer->normalize($object->getReversals(), 'json', $context);
        }
        if (null !== $object->getReversed()) {
            $data->{'reversed'} = $object->getReversed();
        }
        if (null !== $object->getSourceTransaction()) {
            $data->{'source_transaction'} = $object->getSourceTransaction();
        }
        if (null !== $object->getSourceType()) {
            $data->{'source_type'} = $object->getSourceType();
        }
        if (null !== $object->getTransferGroup()) {
            $data->{'transfer_group'} = $object->getTransferGroup();
        }

        return $data;
    }
}
