<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Normalizer;

use Jane\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class SourceNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Stripe\\Api\\Model\\Source';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Stripe\Api\Model\Source;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        if (isset($data->{'$ref'})) {
            return new Reference($data->{'$ref'}, $context['document-origin']);
        }
        $object = new \Stripe\Api\Model\Source();
        if (property_exists($data, 'ach_credit_transfer')) {
            $object->setAchCreditTransfer($this->denormalizer->denormalize($data->{'ach_credit_transfer'}, 'Stripe\\Api\\Model\\SourceTypeAchCreditTransfer', 'json', $context));
        }
        if (property_exists($data, 'ach_debit')) {
            $object->setAchDebit($this->denormalizer->denormalize($data->{'ach_debit'}, 'Stripe\\Api\\Model\\SourceTypeAchDebit', 'json', $context));
        }
        if (property_exists($data, 'alipay')) {
            $object->setAlipay($this->denormalizer->denormalize($data->{'alipay'}, 'Stripe\\Api\\Model\\SourceTypeAlipay', 'json', $context));
        }
        if (property_exists($data, 'amount')) {
            $object->setAmount($data->{'amount'});
        }
        if (property_exists($data, 'bancontact')) {
            $object->setBancontact($this->denormalizer->denormalize($data->{'bancontact'}, 'Stripe\\Api\\Model\\SourceTypeBancontact', 'json', $context));
        }
        if (property_exists($data, 'card')) {
            $object->setCard($this->denormalizer->denormalize($data->{'card'}, 'Stripe\\Api\\Model\\SourceTypeCard', 'json', $context));
        }
        if (property_exists($data, 'card_present')) {
            $object->setCardPresent($this->denormalizer->denormalize($data->{'card_present'}, 'Stripe\\Api\\Model\\SourceTypeCardPresent', 'json', $context));
        }
        if (property_exists($data, 'client_secret')) {
            $object->setClientSecret($data->{'client_secret'});
        }
        if (property_exists($data, 'code_verification')) {
            $object->setCodeVerification($this->denormalizer->denormalize($data->{'code_verification'}, 'Stripe\\Api\\Model\\SourceCodeVerificationFlow', 'json', $context));
        }
        if (property_exists($data, 'created')) {
            $object->setCreated($data->{'created'});
        }
        if (property_exists($data, 'currency')) {
            $object->setCurrency($data->{'currency'});
        }
        if (property_exists($data, 'customer')) {
            $object->setCustomer($data->{'customer'});
        }
        if (property_exists($data, 'eps')) {
            $object->setEps($this->denormalizer->denormalize($data->{'eps'}, 'Stripe\\Api\\Model\\SourceTypeEps', 'json', $context));
        }
        if (property_exists($data, 'flow')) {
            $object->setFlow($data->{'flow'});
        }
        if (property_exists($data, 'giropay')) {
            $object->setGiropay($this->denormalizer->denormalize($data->{'giropay'}, 'Stripe\\Api\\Model\\SourceTypeGiropay', 'json', $context));
        }
        if (property_exists($data, 'id')) {
            $object->setId($data->{'id'});
        }
        if (property_exists($data, 'ideal')) {
            $object->setIdeal($this->denormalizer->denormalize($data->{'ideal'}, 'Stripe\\Api\\Model\\SourceTypeIdeal', 'json', $context));
        }
        if (property_exists($data, 'livemode')) {
            $object->setLivemode($data->{'livemode'});
        }
        if (property_exists($data, 'metadata')) {
            $object->setMetadata($data->{'metadata'});
        }
        if (property_exists($data, 'multibanco')) {
            $object->setMultibanco($this->denormalizer->denormalize($data->{'multibanco'}, 'Stripe\\Api\\Model\\SourceTypeMultibanco', 'json', $context));
        }
        if (property_exists($data, 'object')) {
            $object->setObject($data->{'object'});
        }
        if (property_exists($data, 'owner')) {
            $object->setOwner($this->denormalizer->denormalize($data->{'owner'}, 'Stripe\\Api\\Model\\SourceOwner', 'json', $context));
        }
        if (property_exists($data, 'p24')) {
            $object->setP24($this->denormalizer->denormalize($data->{'p24'}, 'Stripe\\Api\\Model\\SourceTypeP24', 'json', $context));
        }
        if (property_exists($data, 'paper_check')) {
            $object->setPaperCheck($this->denormalizer->denormalize($data->{'paper_check'}, 'Stripe\\Api\\Model\\SourceTypePaperCheck', 'json', $context));
        }
        if (property_exists($data, 'receiver')) {
            $object->setReceiver($this->denormalizer->denormalize($data->{'receiver'}, 'Stripe\\Api\\Model\\SourceReceiverFlow', 'json', $context));
        }
        if (property_exists($data, 'redirect')) {
            $object->setRedirect($this->denormalizer->denormalize($data->{'redirect'}, 'Stripe\\Api\\Model\\SourceRedirectFlow', 'json', $context));
        }
        if (property_exists($data, 'sepa_credit_transfer')) {
            $object->setSepaCreditTransfer($this->denormalizer->denormalize($data->{'sepa_credit_transfer'}, 'Stripe\\Api\\Model\\SourceTypeSepaCreditTransfer', 'json', $context));
        }
        if (property_exists($data, 'sepa_debit')) {
            $object->setSepaDebit($this->denormalizer->denormalize($data->{'sepa_debit'}, 'Stripe\\Api\\Model\\SourceTypeSepaDebit', 'json', $context));
        }
        if (property_exists($data, 'sofort')) {
            $object->setSofort($this->denormalizer->denormalize($data->{'sofort'}, 'Stripe\\Api\\Model\\SourceTypeSofort', 'json', $context));
        }
        if (property_exists($data, 'statement_descriptor')) {
            $object->setStatementDescriptor($data->{'statement_descriptor'});
        }
        if (property_exists($data, 'status')) {
            $object->setStatus($data->{'status'});
        }
        if (property_exists($data, 'three_d_secure')) {
            $object->setThreeDSecure($this->denormalizer->denormalize($data->{'three_d_secure'}, 'Stripe\\Api\\Model\\SourceTypeThreeDSecure', 'json', $context));
        }
        if (property_exists($data, 'type')) {
            $object->setType($data->{'type'});
        }
        if (property_exists($data, 'usage')) {
            $object->setUsage($data->{'usage'});
        }
        if (property_exists($data, 'wechat')) {
            $object->setWechat($this->denormalizer->denormalize($data->{'wechat'}, 'Stripe\\Api\\Model\\SourceTypeWechat', 'json', $context));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAchCreditTransfer()) {
            $data->{'ach_credit_transfer'} = $this->normalizer->normalize($object->getAchCreditTransfer(), 'json', $context);
        }
        if (null !== $object->getAchDebit()) {
            $data->{'ach_debit'} = $this->normalizer->normalize($object->getAchDebit(), 'json', $context);
        }
        if (null !== $object->getAlipay()) {
            $data->{'alipay'} = $this->normalizer->normalize($object->getAlipay(), 'json', $context);
        }
        if (null !== $object->getAmount()) {
            $data->{'amount'} = $object->getAmount();
        }
        if (null !== $object->getBancontact()) {
            $data->{'bancontact'} = $this->normalizer->normalize($object->getBancontact(), 'json', $context);
        }
        if (null !== $object->getCard()) {
            $data->{'card'} = $this->normalizer->normalize($object->getCard(), 'json', $context);
        }
        if (null !== $object->getCardPresent()) {
            $data->{'card_present'} = $this->normalizer->normalize($object->getCardPresent(), 'json', $context);
        }
        if (null !== $object->getClientSecret()) {
            $data->{'client_secret'} = $object->getClientSecret();
        }
        if (null !== $object->getCodeVerification()) {
            $data->{'code_verification'} = $this->normalizer->normalize($object->getCodeVerification(), 'json', $context);
        }
        if (null !== $object->getCreated()) {
            $data->{'created'} = $object->getCreated();
        }
        if (null !== $object->getCurrency()) {
            $data->{'currency'} = $object->getCurrency();
        }
        if (null !== $object->getCustomer()) {
            $data->{'customer'} = $object->getCustomer();
        }
        if (null !== $object->getEps()) {
            $data->{'eps'} = $this->normalizer->normalize($object->getEps(), 'json', $context);
        }
        if (null !== $object->getFlow()) {
            $data->{'flow'} = $object->getFlow();
        }
        if (null !== $object->getGiropay()) {
            $data->{'giropay'} = $this->normalizer->normalize($object->getGiropay(), 'json', $context);
        }
        if (null !== $object->getId()) {
            $data->{'id'} = $object->getId();
        }
        if (null !== $object->getIdeal()) {
            $data->{'ideal'} = $this->normalizer->normalize($object->getIdeal(), 'json', $context);
        }
        if (null !== $object->getLivemode()) {
            $data->{'livemode'} = $object->getLivemode();
        }
        if (null !== $object->getMetadata()) {
            $data->{'metadata'} = $object->getMetadata();
        }
        if (null !== $object->getMultibanco()) {
            $data->{'multibanco'} = $this->normalizer->normalize($object->getMultibanco(), 'json', $context);
        }
        if (null !== $object->getObject()) {
            $data->{'object'} = $object->getObject();
        }
        if (null !== $object->getOwner()) {
            $data->{'owner'} = $this->normalizer->normalize($object->getOwner(), 'json', $context);
        }
        if (null !== $object->getP24()) {
            $data->{'p24'} = $this->normalizer->normalize($object->getP24(), 'json', $context);
        }
        if (null !== $object->getPaperCheck()) {
            $data->{'paper_check'} = $this->normalizer->normalize($object->getPaperCheck(), 'json', $context);
        }
        if (null !== $object->getReceiver()) {
            $data->{'receiver'} = $this->normalizer->normalize($object->getReceiver(), 'json', $context);
        }
        if (null !== $object->getRedirect()) {
            $data->{'redirect'} = $this->normalizer->normalize($object->getRedirect(), 'json', $context);
        }
        if (null !== $object->getSepaCreditTransfer()) {
            $data->{'sepa_credit_transfer'} = $this->normalizer->normalize($object->getSepaCreditTransfer(), 'json', $context);
        }
        if (null !== $object->getSepaDebit()) {
            $data->{'sepa_debit'} = $this->normalizer->normalize($object->getSepaDebit(), 'json', $context);
        }
        if (null !== $object->getSofort()) {
            $data->{'sofort'} = $this->normalizer->normalize($object->getSofort(), 'json', $context);
        }
        if (null !== $object->getStatementDescriptor()) {
            $data->{'statement_descriptor'} = $object->getStatementDescriptor();
        }
        if (null !== $object->getStatus()) {
            $data->{'status'} = $object->getStatus();
        }
        if (null !== $object->getThreeDSecure()) {
            $data->{'three_d_secure'} = $this->normalizer->normalize($object->getThreeDSecure(), 'json', $context);
        }
        if (null !== $object->getType()) {
            $data->{'type'} = $object->getType();
        }
        if (null !== $object->getUsage()) {
            $data->{'usage'} = $object->getUsage();
        }
        if (null !== $object->getWechat()) {
            $data->{'wechat'} = $this->normalizer->normalize($object->getWechat(), 'json', $context);
        }

        return $data;
    }
}
