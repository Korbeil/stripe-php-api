<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Normalizer;

use Jane\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class PaymentMethodDetailsNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Stripe\\Api\\Model\\PaymentMethodDetails';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Stripe\Api\Model\PaymentMethodDetails;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        if (isset($data->{'$ref'})) {
            return new Reference($data->{'$ref'}, $context['document-origin']);
        }
        $object = new \Stripe\Api\Model\PaymentMethodDetails();
        if (property_exists($data, 'ach_credit_transfer')) {
            $object->setAchCreditTransfer($this->denormalizer->denormalize($data->{'ach_credit_transfer'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsAchCreditTransfer', 'json', $context));
        }
        if (property_exists($data, 'ach_debit')) {
            $object->setAchDebit($this->denormalizer->denormalize($data->{'ach_debit'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsAchDebit', 'json', $context));
        }
        if (property_exists($data, 'alipay')) {
            $object->setAlipay($this->denormalizer->denormalize($data->{'alipay'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsAlipay', 'json', $context));
        }
        if (property_exists($data, 'bancontact')) {
            $object->setBancontact($this->denormalizer->denormalize($data->{'bancontact'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsBancontact', 'json', $context));
        }
        if (property_exists($data, 'card')) {
            $object->setCard($this->denormalizer->denormalize($data->{'card'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsCard', 'json', $context));
        }
        if (property_exists($data, 'card_present')) {
            $object->setCardPresent($this->denormalizer->denormalize($data->{'card_present'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsCardPresent', 'json', $context));
        }
        if (property_exists($data, 'eps')) {
            $object->setEps($this->denormalizer->denormalize($data->{'eps'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsEps', 'json', $context));
        }
        if (property_exists($data, 'giropay')) {
            $object->setGiropay($this->denormalizer->denormalize($data->{'giropay'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsGiropay', 'json', $context));
        }
        if (property_exists($data, 'ideal')) {
            $object->setIdeal($this->denormalizer->denormalize($data->{'ideal'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsIdeal', 'json', $context));
        }
        if (property_exists($data, 'multibanco')) {
            $object->setMultibanco($this->denormalizer->denormalize($data->{'multibanco'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsMultibanco', 'json', $context));
        }
        if (property_exists($data, 'p24')) {
            $object->setP24($this->denormalizer->denormalize($data->{'p24'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsP24', 'json', $context));
        }
        if (property_exists($data, 'sepa_debit')) {
            $object->setSepaDebit($this->denormalizer->denormalize($data->{'sepa_debit'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsSepaDebit', 'json', $context));
        }
        if (property_exists($data, 'sofort')) {
            $object->setSofort($this->denormalizer->denormalize($data->{'sofort'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsSofort', 'json', $context));
        }
        if (property_exists($data, 'stripe_account')) {
            $object->setStripeAccount($this->denormalizer->denormalize($data->{'stripe_account'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsStripeAccount', 'json', $context));
        }
        if (property_exists($data, 'type')) {
            $object->setType($data->{'type'});
        }
        if (property_exists($data, 'wechat')) {
            $object->setWechat($this->denormalizer->denormalize($data->{'wechat'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsWechat', 'json', $context));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAchCreditTransfer()) {
            $data->{'ach_credit_transfer'} = $this->normalizer->normalize($object->getAchCreditTransfer(), 'json', $context);
        }
        if (null !== $object->getAchDebit()) {
            $data->{'ach_debit'} = $this->normalizer->normalize($object->getAchDebit(), 'json', $context);
        }
        if (null !== $object->getAlipay()) {
            $data->{'alipay'} = $this->normalizer->normalize($object->getAlipay(), 'json', $context);
        }
        if (null !== $object->getBancontact()) {
            $data->{'bancontact'} = $this->normalizer->normalize($object->getBancontact(), 'json', $context);
        }
        if (null !== $object->getCard()) {
            $data->{'card'} = $this->normalizer->normalize($object->getCard(), 'json', $context);
        }
        if (null !== $object->getCardPresent()) {
            $data->{'card_present'} = $this->normalizer->normalize($object->getCardPresent(), 'json', $context);
        }
        if (null !== $object->getEps()) {
            $data->{'eps'} = $this->normalizer->normalize($object->getEps(), 'json', $context);
        }
        if (null !== $object->getGiropay()) {
            $data->{'giropay'} = $this->normalizer->normalize($object->getGiropay(), 'json', $context);
        }
        if (null !== $object->getIdeal()) {
            $data->{'ideal'} = $this->normalizer->normalize($object->getIdeal(), 'json', $context);
        }
        if (null !== $object->getMultibanco()) {
            $data->{'multibanco'} = $this->normalizer->normalize($object->getMultibanco(), 'json', $context);
        }
        if (null !== $object->getP24()) {
            $data->{'p24'} = $this->normalizer->normalize($object->getP24(), 'json', $context);
        }
        if (null !== $object->getSepaDebit()) {
            $data->{'sepa_debit'} = $this->normalizer->normalize($object->getSepaDebit(), 'json', $context);
        }
        if (null !== $object->getSofort()) {
            $data->{'sofort'} = $this->normalizer->normalize($object->getSofort(), 'json', $context);
        }
        if (null !== $object->getStripeAccount()) {
            $data->{'stripe_account'} = $this->normalizer->normalize($object->getStripeAccount(), 'json', $context);
        }
        if (null !== $object->getType()) {
            $data->{'type'} = $object->getType();
        }
        if (null !== $object->getWechat()) {
            $data->{'wechat'} = $this->normalizer->normalize($object->getWechat(), 'json', $context);
        }

        return $data;
    }
}
