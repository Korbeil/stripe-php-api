<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Normalizer;

use Jane\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class PaymentMethodDetailsCardWalletNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Stripe\\Api\\Model\\PaymentMethodDetailsCardWallet';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Stripe\Api\Model\PaymentMethodDetailsCardWallet;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        if (isset($data->{'$ref'})) {
            return new Reference($data->{'$ref'}, $context['document-origin']);
        }
        $object = new \Stripe\Api\Model\PaymentMethodDetailsCardWallet();
        if (property_exists($data, 'amex_express_checkout')) {
            $object->setAmexExpressCheckout($this->denormalizer->denormalize($data->{'amex_express_checkout'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsCardWalletAmexExpressCheckout', 'json', $context));
        }
        if (property_exists($data, 'apple_pay')) {
            $object->setApplePay($this->denormalizer->denormalize($data->{'apple_pay'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsCardWalletApplePay', 'json', $context));
        }
        if (property_exists($data, 'dynamic_last4')) {
            $object->setDynamicLast4($data->{'dynamic_last4'});
        }
        if (property_exists($data, 'google_pay')) {
            $object->setGooglePay($this->denormalizer->denormalize($data->{'google_pay'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsCardWalletGooglePay', 'json', $context));
        }
        if (property_exists($data, 'masterpass')) {
            $object->setMasterpass($this->denormalizer->denormalize($data->{'masterpass'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsCardWalletMasterpass', 'json', $context));
        }
        if (property_exists($data, 'samsung_pay')) {
            $object->setSamsungPay($this->denormalizer->denormalize($data->{'samsung_pay'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsCardWalletSamsungPay', 'json', $context));
        }
        if (property_exists($data, 'type')) {
            $object->setType($data->{'type'});
        }
        if (property_exists($data, 'visa_checkout')) {
            $object->setVisaCheckout($this->denormalizer->denormalize($data->{'visa_checkout'}, 'Stripe\\Api\\Model\\PaymentMethodDetailsCardWalletVisaCheckout', 'json', $context));
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAmexExpressCheckout()) {
            $data->{'amex_express_checkout'} = $this->normalizer->normalize($object->getAmexExpressCheckout(), 'json', $context);
        }
        if (null !== $object->getApplePay()) {
            $data->{'apple_pay'} = $this->normalizer->normalize($object->getApplePay(), 'json', $context);
        }
        if (null !== $object->getDynamicLast4()) {
            $data->{'dynamic_last4'} = $object->getDynamicLast4();
        }
        if (null !== $object->getGooglePay()) {
            $data->{'google_pay'} = $this->normalizer->normalize($object->getGooglePay(), 'json', $context);
        }
        if (null !== $object->getMasterpass()) {
            $data->{'masterpass'} = $this->normalizer->normalize($object->getMasterpass(), 'json', $context);
        }
        if (null !== $object->getSamsungPay()) {
            $data->{'samsung_pay'} = $this->normalizer->normalize($object->getSamsungPay(), 'json', $context);
        }
        if (null !== $object->getType()) {
            $data->{'type'} = $object->getType();
        }
        if (null !== $object->getVisaCheckout()) {
            $data->{'visa_checkout'} = $this->normalizer->normalize($object->getVisaCheckout(), 'json', $context);
        }

        return $data;
    }
}
