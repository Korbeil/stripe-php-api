<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Normalizer;

use Jane\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class SourceTypeCardPresentNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Stripe\\Api\\Model\\SourceTypeCardPresent';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Stripe\Api\Model\SourceTypeCardPresent;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        if (isset($data->{'$ref'})) {
            return new Reference($data->{'$ref'}, $context['document-origin']);
        }
        $object = new \Stripe\Api\Model\SourceTypeCardPresent();
        if (property_exists($data, 'application_cryptogram')) {
            $object->setApplicationCryptogram($data->{'application_cryptogram'});
        }
        if (property_exists($data, 'application_preferred_name')) {
            $object->setApplicationPreferredName($data->{'application_preferred_name'});
        }
        if (property_exists($data, 'authorization_code')) {
            $object->setAuthorizationCode($data->{'authorization_code'});
        }
        if (property_exists($data, 'authorization_response_code')) {
            $object->setAuthorizationResponseCode($data->{'authorization_response_code'});
        }
        if (property_exists($data, 'brand')) {
            $object->setBrand($data->{'brand'});
        }
        if (property_exists($data, 'country')) {
            $object->setCountry($data->{'country'});
        }
        if (property_exists($data, 'cvm_type')) {
            $object->setCvmType($data->{'cvm_type'});
        }
        if (property_exists($data, 'data_type')) {
            $object->setDataType($data->{'data_type'});
        }
        if (property_exists($data, 'dedicated_file_name')) {
            $object->setDedicatedFileName($data->{'dedicated_file_name'});
        }
        if (property_exists($data, 'emv_auth_data')) {
            $object->setEmvAuthData($data->{'emv_auth_data'});
        }
        if (property_exists($data, 'evidence_customer_signature')) {
            $object->setEvidenceCustomerSignature($data->{'evidence_customer_signature'});
        }
        if (property_exists($data, 'evidence_transaction_certificate')) {
            $object->setEvidenceTransactionCertificate($data->{'evidence_transaction_certificate'});
        }
        if (property_exists($data, 'exp_month')) {
            $object->setExpMonth($data->{'exp_month'});
        }
        if (property_exists($data, 'exp_year')) {
            $object->setExpYear($data->{'exp_year'});
        }
        if (property_exists($data, 'fingerprint')) {
            $object->setFingerprint($data->{'fingerprint'});
        }
        if (property_exists($data, 'funding')) {
            $object->setFunding($data->{'funding'});
        }
        if (property_exists($data, 'last4')) {
            $object->setLast4($data->{'last4'});
        }
        if (property_exists($data, 'pos_device_id')) {
            $object->setPosDeviceId($data->{'pos_device_id'});
        }
        if (property_exists($data, 'pos_entry_mode')) {
            $object->setPosEntryMode($data->{'pos_entry_mode'});
        }
        if (property_exists($data, 'read_method')) {
            $object->setReadMethod($data->{'read_method'});
        }
        if (property_exists($data, 'reader')) {
            $object->setReader($data->{'reader'});
        }
        if (property_exists($data, 'terminal_verification_results')) {
            $object->setTerminalVerificationResults($data->{'terminal_verification_results'});
        }
        if (property_exists($data, 'transaction_status_information')) {
            $object->setTransactionStatusInformation($data->{'transaction_status_information'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getApplicationCryptogram()) {
            $data->{'application_cryptogram'} = $object->getApplicationCryptogram();
        }
        if (null !== $object->getApplicationPreferredName()) {
            $data->{'application_preferred_name'} = $object->getApplicationPreferredName();
        }
        if (null !== $object->getAuthorizationCode()) {
            $data->{'authorization_code'} = $object->getAuthorizationCode();
        }
        if (null !== $object->getAuthorizationResponseCode()) {
            $data->{'authorization_response_code'} = $object->getAuthorizationResponseCode();
        }
        if (null !== $object->getBrand()) {
            $data->{'brand'} = $object->getBrand();
        }
        if (null !== $object->getCountry()) {
            $data->{'country'} = $object->getCountry();
        }
        if (null !== $object->getCvmType()) {
            $data->{'cvm_type'} = $object->getCvmType();
        }
        if (null !== $object->getDataType()) {
            $data->{'data_type'} = $object->getDataType();
        }
        if (null !== $object->getDedicatedFileName()) {
            $data->{'dedicated_file_name'} = $object->getDedicatedFileName();
        }
        if (null !== $object->getEmvAuthData()) {
            $data->{'emv_auth_data'} = $object->getEmvAuthData();
        }
        if (null !== $object->getEvidenceCustomerSignature()) {
            $data->{'evidence_customer_signature'} = $object->getEvidenceCustomerSignature();
        }
        if (null !== $object->getEvidenceTransactionCertificate()) {
            $data->{'evidence_transaction_certificate'} = $object->getEvidenceTransactionCertificate();
        }
        if (null !== $object->getExpMonth()) {
            $data->{'exp_month'} = $object->getExpMonth();
        }
        if (null !== $object->getExpYear()) {
            $data->{'exp_year'} = $object->getExpYear();
        }
        if (null !== $object->getFingerprint()) {
            $data->{'fingerprint'} = $object->getFingerprint();
        }
        if (null !== $object->getFunding()) {
            $data->{'funding'} = $object->getFunding();
        }
        if (null !== $object->getLast4()) {
            $data->{'last4'} = $object->getLast4();
        }
        if (null !== $object->getPosDeviceId()) {
            $data->{'pos_device_id'} = $object->getPosDeviceId();
        }
        if (null !== $object->getPosEntryMode()) {
            $data->{'pos_entry_mode'} = $object->getPosEntryMode();
        }
        if (null !== $object->getReadMethod()) {
            $data->{'read_method'} = $object->getReadMethod();
        }
        if (null !== $object->getReader()) {
            $data->{'reader'} = $object->getReader();
        }
        if (null !== $object->getTerminalVerificationResults()) {
            $data->{'terminal_verification_results'} = $object->getTerminalVerificationResults();
        }
        if (null !== $object->getTransactionStatusInformation()) {
            $data->{'transaction_status_information'} = $object->getTransactionStatusInformation();
        }

        return $data;
    }
}
