<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Normalizer;

use Jane\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class V1AccountsAccountPostBodyCompanyNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Stripe\\Api\\Model\\V1AccountsAccountPostBodyCompany';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Stripe\Api\Model\V1AccountsAccountPostBodyCompany;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        if (isset($data->{'$ref'})) {
            return new Reference($data->{'$ref'}, $context['document-origin']);
        }
        $object = new \Stripe\Api\Model\V1AccountsAccountPostBodyCompany();
        if (property_exists($data, 'address')) {
            $object->setAddress($this->denormalizer->denormalize($data->{'address'}, 'Stripe\\Api\\Model\\V1AccountsAccountPostBodyCompanyAddress', 'json', $context));
        }
        if (property_exists($data, 'address_kana')) {
            $object->setAddressKana($this->denormalizer->denormalize($data->{'address_kana'}, 'Stripe\\Api\\Model\\V1AccountsAccountPostBodyCompanyAddressKana', 'json', $context));
        }
        if (property_exists($data, 'address_kanji')) {
            $object->setAddressKanji($this->denormalizer->denormalize($data->{'address_kanji'}, 'Stripe\\Api\\Model\\V1AccountsAccountPostBodyCompanyAddressKanji', 'json', $context));
        }
        if (property_exists($data, 'directors_provided')) {
            $object->setDirectorsProvided($data->{'directors_provided'});
        }
        if (property_exists($data, 'name')) {
            $object->setName($data->{'name'});
        }
        if (property_exists($data, 'name_kana')) {
            $object->setNameKana($data->{'name_kana'});
        }
        if (property_exists($data, 'name_kanji')) {
            $object->setNameKanji($data->{'name_kanji'});
        }
        if (property_exists($data, 'owners_provided')) {
            $object->setOwnersProvided($data->{'owners_provided'});
        }
        if (property_exists($data, 'phone')) {
            $object->setPhone($data->{'phone'});
        }
        if (property_exists($data, 'tax_id')) {
            $object->setTaxId($data->{'tax_id'});
        }
        if (property_exists($data, 'tax_id_registrar')) {
            $object->setTaxIdRegistrar($data->{'tax_id_registrar'});
        }
        if (property_exists($data, 'vat_id')) {
            $object->setVatId($data->{'vat_id'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getAddress()) {
            $data->{'address'} = $this->normalizer->normalize($object->getAddress(), 'json', $context);
        }
        if (null !== $object->getAddressKana()) {
            $data->{'address_kana'} = $this->normalizer->normalize($object->getAddressKana(), 'json', $context);
        }
        if (null !== $object->getAddressKanji()) {
            $data->{'address_kanji'} = $this->normalizer->normalize($object->getAddressKanji(), 'json', $context);
        }
        if (null !== $object->getDirectorsProvided()) {
            $data->{'directors_provided'} = $object->getDirectorsProvided();
        }
        if (null !== $object->getName()) {
            $data->{'name'} = $object->getName();
        }
        if (null !== $object->getNameKana()) {
            $data->{'name_kana'} = $object->getNameKana();
        }
        if (null !== $object->getNameKanji()) {
            $data->{'name_kanji'} = $object->getNameKanji();
        }
        if (null !== $object->getOwnersProvided()) {
            $data->{'owners_provided'} = $object->getOwnersProvided();
        }
        if (null !== $object->getPhone()) {
            $data->{'phone'} = $object->getPhone();
        }
        if (null !== $object->getTaxId()) {
            $data->{'tax_id'} = $object->getTaxId();
        }
        if (null !== $object->getTaxIdRegistrar()) {
            $data->{'tax_id_registrar'} = $object->getTaxIdRegistrar();
        }
        if (null !== $object->getVatId()) {
            $data->{'vat_id'} = $object->getVatId();
        }

        return $data;
    }
}
