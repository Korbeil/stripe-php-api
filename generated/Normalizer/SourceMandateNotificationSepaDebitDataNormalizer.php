<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Normalizer;

use Jane\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Exception\InvalidArgumentException;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class SourceMandateNotificationSepaDebitDataNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;

    public function supportsDenormalization($data, $type, $format = null)
    {
        return $type === 'Stripe\\Api\\Model\\SourceMandateNotificationSepaDebitData';
    }

    public function supportsNormalization($data, $format = null)
    {
        return $data instanceof \Stripe\Api\Model\SourceMandateNotificationSepaDebitData;
    }

    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (!is_object($data)) {
            throw new InvalidArgumentException();
        }
        if (isset($data->{'$ref'})) {
            return new Reference($data->{'$ref'}, $context['document-origin']);
        }
        $object = new \Stripe\Api\Model\SourceMandateNotificationSepaDebitData();
        if (property_exists($data, 'creditor_identifier')) {
            $object->setCreditorIdentifier($data->{'creditor_identifier'});
        }
        if (property_exists($data, 'last4')) {
            $object->setLast4($data->{'last4'});
        }
        if (property_exists($data, 'mandate_reference')) {
            $object->setMandateReference($data->{'mandate_reference'});
        }

        return $object;
    }

    public function normalize($object, $format = null, array $context = [])
    {
        $data = new \stdClass();
        if (null !== $object->getCreditorIdentifier()) {
            $data->{'creditor_identifier'} = $object->getCreditorIdentifier();
        }
        if (null !== $object->getLast4()) {
            $data->{'last4'} = $object->getLast4();
        }
        if (null !== $object->getMandateReference()) {
            $data->{'mandate_reference'} = $object->getMandateReference();
        }

        return $data;
    }
}
