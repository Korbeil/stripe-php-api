<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Model;

class V1IssuingDisputesPostBody
{
    /**
     * Amount to dispute, defaults to full value, given in the currency the transaction was made in.
     *
     * @var int
     */
    protected $amount;
    /**
     * The ID of the issuing transaction to create a dispute for.
     *
     * @var string
     */
    protected $disputedTransaction;
    /**
     * A hash containing all the evidence related to the dispute. This should have a single key, equal to the provided `reason`, mapping to an appropriate evidence object.
     *
     * @var V1IssuingDisputesPostBodyEvidence
     */
    protected $evidence;
    /**
     * Specifies which fields in the response should be expanded.
     *
     * @var string[]
     */
    protected $expand;
    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
     *
     * @var mixed
     */
    protected $metadata;
    /**
     * The reason for the dispute, which can be chosen out of a set of valid values.
     *
     * @var string
     */
    protected $reason;

    /**
     * Amount to dispute, defaults to full value, given in the currency the transaction was made in.
     *
     * @return int
     */
    public function getAmount(): ?int
    {
        return $this->amount;
    }

    /**
     * Amount to dispute, defaults to full value, given in the currency the transaction was made in.
     *
     * @param int $amount
     *
     * @return self
     */
    public function setAmount(?int $amount): self
    {
        $this->amount = $amount;

        return $this;
    }

    /**
     * The ID of the issuing transaction to create a dispute for.
     *
     * @return string
     */
    public function getDisputedTransaction(): ?string
    {
        return $this->disputedTransaction;
    }

    /**
     * The ID of the issuing transaction to create a dispute for.
     *
     * @param string $disputedTransaction
     *
     * @return self
     */
    public function setDisputedTransaction(?string $disputedTransaction): self
    {
        $this->disputedTransaction = $disputedTransaction;

        return $this;
    }

    /**
     * A hash containing all the evidence related to the dispute. This should have a single key, equal to the provided `reason`, mapping to an appropriate evidence object.
     *
     * @return V1IssuingDisputesPostBodyEvidence
     */
    public function getEvidence(): ?V1IssuingDisputesPostBodyEvidence
    {
        return $this->evidence;
    }

    /**
     * A hash containing all the evidence related to the dispute. This should have a single key, equal to the provided `reason`, mapping to an appropriate evidence object.
     *
     * @param V1IssuingDisputesPostBodyEvidence $evidence
     *
     * @return self
     */
    public function setEvidence(?V1IssuingDisputesPostBodyEvidence $evidence): self
    {
        $this->evidence = $evidence;

        return $this;
    }

    /**
     * Specifies which fields in the response should be expanded.
     *
     * @return string[]
     */
    public function getExpand(): ?array
    {
        return $this->expand;
    }

    /**
     * Specifies which fields in the response should be expanded.
     *
     * @param string[] $expand
     *
     * @return self
     */
    public function setExpand(?array $expand): self
    {
        $this->expand = $expand;

        return $this;
    }

    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
     *
     * @return mixed
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.
     *
     * @param mixed $metadata
     *
     * @return self
     */
    public function setMetadata($metadata): self
    {
        $this->metadata = $metadata;

        return $this;
    }

    /**
     * The reason for the dispute, which can be chosen out of a set of valid values.
     *
     * @return string
     */
    public function getReason(): ?string
    {
        return $this->reason;
    }

    /**
     * The reason for the dispute, which can be chosen out of a set of valid values.
     *
     * @param string $reason
     *
     * @return self
     */
    public function setReason(?string $reason): self
    {
        $this->reason = $reason;

        return $this;
    }
}
