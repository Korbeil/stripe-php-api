<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Model;

class V1IssuingCardsCardPostBody
{
    /**
     * Spending rules that give you some control over how your cards can be used. Refer to our [authorizations](https://stripe.com/docs/issuing/authorizations) documentation for more details.
     *
     * @var V1IssuingCardsCardPostBodyAuthorizationControls
     */
    protected $authorizationControls;
    /**
     * The [Cardholder](https://stripe.com/docs/api#issuing_cardholder_object) to associate the card with.
     *
     * @var string
     */
    protected $cardholder;
    /**
     * Specifies which fields in the response should be expanded.
     *
     * @var string[]
     */
    protected $expand;
    /**
     * @var mixed
     */
    protected $metadata;
    /**
     * Specifies whether to permit authorizations on this card. Possible values are `active`, `inactive`, or the terminal states: `canceled`, `lost`, `stolen`.
     *
     * @var string
     */
    protected $status;

    /**
     * Spending rules that give you some control over how your cards can be used. Refer to our [authorizations](https://stripe.com/docs/issuing/authorizations) documentation for more details.
     *
     * @return V1IssuingCardsCardPostBodyAuthorizationControls
     */
    public function getAuthorizationControls(): ?V1IssuingCardsCardPostBodyAuthorizationControls
    {
        return $this->authorizationControls;
    }

    /**
     * Spending rules that give you some control over how your cards can be used. Refer to our [authorizations](https://stripe.com/docs/issuing/authorizations) documentation for more details.
     *
     * @param V1IssuingCardsCardPostBodyAuthorizationControls $authorizationControls
     *
     * @return self
     */
    public function setAuthorizationControls(?V1IssuingCardsCardPostBodyAuthorizationControls $authorizationControls): self
    {
        $this->authorizationControls = $authorizationControls;

        return $this;
    }

    /**
     * The [Cardholder](https://stripe.com/docs/api#issuing_cardholder_object) to associate the card with.
     *
     * @return string
     */
    public function getCardholder(): ?string
    {
        return $this->cardholder;
    }

    /**
     * The [Cardholder](https://stripe.com/docs/api#issuing_cardholder_object) to associate the card with.
     *
     * @param string $cardholder
     *
     * @return self
     */
    public function setCardholder(?string $cardholder): self
    {
        $this->cardholder = $cardholder;

        return $this;
    }

    /**
     * Specifies which fields in the response should be expanded.
     *
     * @return string[]
     */
    public function getExpand(): ?array
    {
        return $this->expand;
    }

    /**
     * Specifies which fields in the response should be expanded.
     *
     * @param string[] $expand
     *
     * @return self
     */
    public function setExpand(?array $expand): self
    {
        $this->expand = $expand;

        return $this;
    }

    /**
     * @return mixed
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * @param mixed $metadata
     *
     * @return self
     */
    public function setMetadata($metadata): self
    {
        $this->metadata = $metadata;

        return $this;
    }

    /**
     * Specifies whether to permit authorizations on this card. Possible values are `active`, `inactive`, or the terminal states: `canceled`, `lost`, `stolen`.
     *
     * @return string
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Specifies whether to permit authorizations on this card. Possible values are `active`, `inactive`, or the terminal states: `canceled`, `lost`, `stolen`.
     *
     * @param string $status
     *
     * @return self
     */
    public function setStatus(?string $status): self
    {
        $this->status = $status;

        return $this;
    }
}
