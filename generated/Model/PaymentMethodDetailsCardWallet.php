<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Model;

class PaymentMethodDetailsCardWallet
{
    /**
     * @var PaymentMethodDetailsCardWalletAmexExpressCheckout
     */
    protected $amexExpressCheckout;
    /**
     * @var PaymentMethodDetailsCardWalletApplePay
     */
    protected $applePay;
    /**
     * (For tokenized numbers only.) The last four digits of the device account number.
     *
     * @var string
     */
    protected $dynamicLast4;
    /**
     * @var PaymentMethodDetailsCardWalletGooglePay
     */
    protected $googlePay;
    /**
     * @var PaymentMethodDetailsCardWalletMasterpass
     */
    protected $masterpass;
    /**
     * @var PaymentMethodDetailsCardWalletSamsungPay
     */
    protected $samsungPay;
    /**
     * The type of the card wallet, one of `amex_express_checkout`, `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, or `visa_checkout`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.
     *
     * @var string
     */
    protected $type;
    /**
     * @var PaymentMethodDetailsCardWalletVisaCheckout
     */
    protected $visaCheckout;

    /**
     * @return PaymentMethodDetailsCardWalletAmexExpressCheckout
     */
    public function getAmexExpressCheckout(): ?PaymentMethodDetailsCardWalletAmexExpressCheckout
    {
        return $this->amexExpressCheckout;
    }

    /**
     * @param PaymentMethodDetailsCardWalletAmexExpressCheckout $amexExpressCheckout
     *
     * @return self
     */
    public function setAmexExpressCheckout(?PaymentMethodDetailsCardWalletAmexExpressCheckout $amexExpressCheckout): self
    {
        $this->amexExpressCheckout = $amexExpressCheckout;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsCardWalletApplePay
     */
    public function getApplePay(): ?PaymentMethodDetailsCardWalletApplePay
    {
        return $this->applePay;
    }

    /**
     * @param PaymentMethodDetailsCardWalletApplePay $applePay
     *
     * @return self
     */
    public function setApplePay(?PaymentMethodDetailsCardWalletApplePay $applePay): self
    {
        $this->applePay = $applePay;

        return $this;
    }

    /**
     * (For tokenized numbers only.) The last four digits of the device account number.
     *
     * @return string
     */
    public function getDynamicLast4(): ?string
    {
        return $this->dynamicLast4;
    }

    /**
     * (For tokenized numbers only.) The last four digits of the device account number.
     *
     * @param string $dynamicLast4
     *
     * @return self
     */
    public function setDynamicLast4(?string $dynamicLast4): self
    {
        $this->dynamicLast4 = $dynamicLast4;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsCardWalletGooglePay
     */
    public function getGooglePay(): ?PaymentMethodDetailsCardWalletGooglePay
    {
        return $this->googlePay;
    }

    /**
     * @param PaymentMethodDetailsCardWalletGooglePay $googlePay
     *
     * @return self
     */
    public function setGooglePay(?PaymentMethodDetailsCardWalletGooglePay $googlePay): self
    {
        $this->googlePay = $googlePay;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsCardWalletMasterpass
     */
    public function getMasterpass(): ?PaymentMethodDetailsCardWalletMasterpass
    {
        return $this->masterpass;
    }

    /**
     * @param PaymentMethodDetailsCardWalletMasterpass $masterpass
     *
     * @return self
     */
    public function setMasterpass(?PaymentMethodDetailsCardWalletMasterpass $masterpass): self
    {
        $this->masterpass = $masterpass;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsCardWalletSamsungPay
     */
    public function getSamsungPay(): ?PaymentMethodDetailsCardWalletSamsungPay
    {
        return $this->samsungPay;
    }

    /**
     * @param PaymentMethodDetailsCardWalletSamsungPay $samsungPay
     *
     * @return self
     */
    public function setSamsungPay(?PaymentMethodDetailsCardWalletSamsungPay $samsungPay): self
    {
        $this->samsungPay = $samsungPay;

        return $this;
    }

    /**
     * The type of the card wallet, one of `amex_express_checkout`, `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, or `visa_checkout`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.
     *
     * @return string
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * The type of the card wallet, one of `amex_express_checkout`, `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`, or `visa_checkout`. An additional hash is included on the Wallet subhash with a name matching this value. It contains additional information specific to the card wallet type.
     *
     * @param string $type
     *
     * @return self
     */
    public function setType(?string $type): self
    {
        $this->type = $type;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsCardWalletVisaCheckout
     */
    public function getVisaCheckout(): ?PaymentMethodDetailsCardWalletVisaCheckout
    {
        return $this->visaCheckout;
    }

    /**
     * @param PaymentMethodDetailsCardWalletVisaCheckout $visaCheckout
     *
     * @return self
     */
    public function setVisaCheckout(?PaymentMethodDetailsCardWalletVisaCheckout $visaCheckout): self
    {
        $this->visaCheckout = $visaCheckout;

        return $this;
    }
}
