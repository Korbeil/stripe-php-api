<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Model;

class AlipayAccount
{
    /**
     * Time at which the object was created. Measured in seconds since the Unix epoch.
     *
     * @var int
     */
    protected $created;
    /**
     * @var string
     */
    protected $customer;
    /**
     * Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.
     *
     * @var string
     */
    protected $fingerprint;
    /**
     * Unique identifier for the object.
     *
     * @var string
     */
    protected $id;
    /**
     * Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
     *
     * @var bool
     */
    protected $livemode;
    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
     *
     * @var mixed
     */
    protected $metadata;
    /**
     * String representing the object's type. Objects of the same type share the same value.
     *
     * @var string
     */
    protected $object;
    /**
     * If the Alipay account object is not reusable, the exact amount that you can create a charge for.
     *
     * @var int
     */
    protected $paymentAmount;
    /**
     * If the Alipay account object is not reusable, the exact currency that you can create a charge for.
     *
     * @var string
     */
    protected $paymentCurrency;
    /**
     * True if you can create multiple payments using this account. If the account is reusable, then you can freely choose the amount of each payment.
     *
     * @var bool
     */
    protected $reusable;
    /**
     * Whether this Alipay account object has ever been used for a payment.
     *
     * @var bool
     */
    protected $used;
    /**
     * The username for the Alipay account.
     *
     * @var string
     */
    protected $username;

    /**
     * Time at which the object was created. Measured in seconds since the Unix epoch.
     *
     * @return int
     */
    public function getCreated(): ?int
    {
        return $this->created;
    }

    /**
     * Time at which the object was created. Measured in seconds since the Unix epoch.
     *
     * @param int $created
     *
     * @return self
     */
    public function setCreated(?int $created): self
    {
        $this->created = $created;

        return $this;
    }

    /**
     * @return string
     */
    public function getCustomer(): ?string
    {
        return $this->customer;
    }

    /**
     * @param string $customer
     *
     * @return self
     */
    public function setCustomer(?string $customer): self
    {
        $this->customer = $customer;

        return $this;
    }

    /**
     * Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.
     *
     * @return string
     */
    public function getFingerprint(): ?string
    {
        return $this->fingerprint;
    }

    /**
     * Uniquely identifies the account and will be the same across all Alipay account objects that are linked to the same Alipay account.
     *
     * @param string $fingerprint
     *
     * @return self
     */
    public function setFingerprint(?string $fingerprint): self
    {
        $this->fingerprint = $fingerprint;

        return $this;
    }

    /**
     * Unique identifier for the object.
     *
     * @return string
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Unique identifier for the object.
     *
     * @param string $id
     *
     * @return self
     */
    public function setId(?string $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
     *
     * @return bool
     */
    public function getLivemode(): ?bool
    {
        return $this->livemode;
    }

    /**
     * Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
     *
     * @param bool $livemode
     *
     * @return self
     */
    public function setLivemode(?bool $livemode): self
    {
        $this->livemode = $livemode;

        return $this;
    }

    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
     *
     * @return mixed
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
     *
     * @param mixed $metadata
     *
     * @return self
     */
    public function setMetadata($metadata): self
    {
        $this->metadata = $metadata;

        return $this;
    }

    /**
     * String representing the object's type. Objects of the same type share the same value.
     *
     * @return string
     */
    public function getObject(): ?string
    {
        return $this->object;
    }

    /**
     * String representing the object's type. Objects of the same type share the same value.
     *
     * @param string $object
     *
     * @return self
     */
    public function setObject(?string $object): self
    {
        $this->object = $object;

        return $this;
    }

    /**
     * If the Alipay account object is not reusable, the exact amount that you can create a charge for.
     *
     * @return int
     */
    public function getPaymentAmount(): ?int
    {
        return $this->paymentAmount;
    }

    /**
     * If the Alipay account object is not reusable, the exact amount that you can create a charge for.
     *
     * @param int $paymentAmount
     *
     * @return self
     */
    public function setPaymentAmount(?int $paymentAmount): self
    {
        $this->paymentAmount = $paymentAmount;

        return $this;
    }

    /**
     * If the Alipay account object is not reusable, the exact currency that you can create a charge for.
     *
     * @return string
     */
    public function getPaymentCurrency(): ?string
    {
        return $this->paymentCurrency;
    }

    /**
     * If the Alipay account object is not reusable, the exact currency that you can create a charge for.
     *
     * @param string $paymentCurrency
     *
     * @return self
     */
    public function setPaymentCurrency(?string $paymentCurrency): self
    {
        $this->paymentCurrency = $paymentCurrency;

        return $this;
    }

    /**
     * True if you can create multiple payments using this account. If the account is reusable, then you can freely choose the amount of each payment.
     *
     * @return bool
     */
    public function getReusable(): ?bool
    {
        return $this->reusable;
    }

    /**
     * True if you can create multiple payments using this account. If the account is reusable, then you can freely choose the amount of each payment.
     *
     * @param bool $reusable
     *
     * @return self
     */
    public function setReusable(?bool $reusable): self
    {
        $this->reusable = $reusable;

        return $this;
    }

    /**
     * Whether this Alipay account object has ever been used for a payment.
     *
     * @return bool
     */
    public function getUsed(): ?bool
    {
        return $this->used;
    }

    /**
     * Whether this Alipay account object has ever been used for a payment.
     *
     * @param bool $used
     *
     * @return self
     */
    public function setUsed(?bool $used): self
    {
        $this->used = $used;

        return $this;
    }

    /**
     * The username for the Alipay account.
     *
     * @return string
     */
    public function getUsername(): ?string
    {
        return $this->username;
    }

    /**
     * The username for the Alipay account.
     *
     * @param string $username
     *
     * @return self
     */
    public function setUsername(?string $username): self
    {
        $this->username = $username;

        return $this;
    }
}
