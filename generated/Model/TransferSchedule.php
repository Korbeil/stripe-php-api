<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Model;

class TransferSchedule
{
    /**
     * The number of days charges for the account will be held before being paid out.
     *
     * @var int
     */
    protected $delayDays;
    /**
     * How frequently funds will be paid out. One of `manual` (payouts only created via API call), `daily`, `weekly`, or `monthly`.
     *
     * @var string
     */
    protected $interval;
    /**
     * The day of the month funds will be paid out. Only shown if `interval` is monthly. Payouts scheduled between the 29th and 31st of the month are sent on the last day of shorter months.
     *
     * @var int
     */
    protected $monthlyAnchor;
    /**
     * The day of the week funds will be paid out, of the style 'monday', 'tuesday', etc. Only shown if `interval` is weekly.
     *
     * @var string
     */
    protected $weeklyAnchor;

    /**
     * The number of days charges for the account will be held before being paid out.
     *
     * @return int
     */
    public function getDelayDays(): ?int
    {
        return $this->delayDays;
    }

    /**
     * The number of days charges for the account will be held before being paid out.
     *
     * @param int $delayDays
     *
     * @return self
     */
    public function setDelayDays(?int $delayDays): self
    {
        $this->delayDays = $delayDays;

        return $this;
    }

    /**
     * How frequently funds will be paid out. One of `manual` (payouts only created via API call), `daily`, `weekly`, or `monthly`.
     *
     * @return string
     */
    public function getInterval(): ?string
    {
        return $this->interval;
    }

    /**
     * How frequently funds will be paid out. One of `manual` (payouts only created via API call), `daily`, `weekly`, or `monthly`.
     *
     * @param string $interval
     *
     * @return self
     */
    public function setInterval(?string $interval): self
    {
        $this->interval = $interval;

        return $this;
    }

    /**
     * The day of the month funds will be paid out. Only shown if `interval` is monthly. Payouts scheduled between the 29th and 31st of the month are sent on the last day of shorter months.
     *
     * @return int
     */
    public function getMonthlyAnchor(): ?int
    {
        return $this->monthlyAnchor;
    }

    /**
     * The day of the month funds will be paid out. Only shown if `interval` is monthly. Payouts scheduled between the 29th and 31st of the month are sent on the last day of shorter months.
     *
     * @param int $monthlyAnchor
     *
     * @return self
     */
    public function setMonthlyAnchor(?int $monthlyAnchor): self
    {
        $this->monthlyAnchor = $monthlyAnchor;

        return $this;
    }

    /**
     * The day of the week funds will be paid out, of the style 'monday', 'tuesday', etc. Only shown if `interval` is weekly.
     *
     * @return string
     */
    public function getWeeklyAnchor(): ?string
    {
        return $this->weeklyAnchor;
    }

    /**
     * The day of the week funds will be paid out, of the style 'monday', 'tuesday', etc. Only shown if `interval` is weekly.
     *
     * @param string $weeklyAnchor
     *
     * @return self
     */
    public function setWeeklyAnchor(?string $weeklyAnchor): self
    {
        $this->weeklyAnchor = $weeklyAnchor;

        return $this;
    }
}
