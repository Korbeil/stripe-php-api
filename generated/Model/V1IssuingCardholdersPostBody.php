<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Model;

class V1IssuingCardholdersPostBody
{
    /**
     * The cardholder's billing address.
     *
     * @var V1IssuingCardholdersPostBodyBilling
     */
    protected $billing;
    /**
     * The cardholder's email address.
     *
     * @var string
     */
    protected $email;
    /**
     * Specifies which fields in the response should be expanded.
     *
     * @var string[]
     */
    protected $expand;
    /**
     * Specifies whether to set this as the default cardholder.
     *
     * @var bool
     */
    protected $isDefault;
    /**
     * @var mixed
     */
    protected $metadata;
    /**
     * The cardholder's name. This will be printed on cards issued to them.
     *
     * @var string
     */
    protected $name;
    /**
     * The cardholder's phone number. This will be transformed to [E.164](https://en.wikipedia.org/wiki/E.164) if it is not provided in that format already.
     *
     * @var string
     */
    protected $phoneNumber;
    /**
     * Specifies whether to permit authorizations on this cardholder's cards. Possible values are `active` or `inactive`.
     *
     * @var string
     */
    protected $status;
    /**
     * The type of cardholder. Possible values are `individual` or `business_entity`.
     *
     * @var string
     */
    protected $type;

    /**
     * The cardholder's billing address.
     *
     * @return V1IssuingCardholdersPostBodyBilling
     */
    public function getBilling(): ?V1IssuingCardholdersPostBodyBilling
    {
        return $this->billing;
    }

    /**
     * The cardholder's billing address.
     *
     * @param V1IssuingCardholdersPostBodyBilling $billing
     *
     * @return self
     */
    public function setBilling(?V1IssuingCardholdersPostBodyBilling $billing): self
    {
        $this->billing = $billing;

        return $this;
    }

    /**
     * The cardholder's email address.
     *
     * @return string
     */
    public function getEmail(): ?string
    {
        return $this->email;
    }

    /**
     * The cardholder's email address.
     *
     * @param string $email
     *
     * @return self
     */
    public function setEmail(?string $email): self
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Specifies which fields in the response should be expanded.
     *
     * @return string[]
     */
    public function getExpand(): ?array
    {
        return $this->expand;
    }

    /**
     * Specifies which fields in the response should be expanded.
     *
     * @param string[] $expand
     *
     * @return self
     */
    public function setExpand(?array $expand): self
    {
        $this->expand = $expand;

        return $this;
    }

    /**
     * Specifies whether to set this as the default cardholder.
     *
     * @return bool
     */
    public function getIsDefault(): ?bool
    {
        return $this->isDefault;
    }

    /**
     * Specifies whether to set this as the default cardholder.
     *
     * @param bool $isDefault
     *
     * @return self
     */
    public function setIsDefault(?bool $isDefault): self
    {
        $this->isDefault = $isDefault;

        return $this;
    }

    /**
     * @return mixed
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * @param mixed $metadata
     *
     * @return self
     */
    public function setMetadata($metadata): self
    {
        $this->metadata = $metadata;

        return $this;
    }

    /**
     * The cardholder's name. This will be printed on cards issued to them.
     *
     * @return string
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * The cardholder's name. This will be printed on cards issued to them.
     *
     * @param string $name
     *
     * @return self
     */
    public function setName(?string $name): self
    {
        $this->name = $name;

        return $this;
    }

    /**
     * The cardholder's phone number. This will be transformed to [E.164](https://en.wikipedia.org/wiki/E.164) if it is not provided in that format already.
     *
     * @return string
     */
    public function getPhoneNumber(): ?string
    {
        return $this->phoneNumber;
    }

    /**
     * The cardholder's phone number. This will be transformed to [E.164](https://en.wikipedia.org/wiki/E.164) if it is not provided in that format already.
     *
     * @param string $phoneNumber
     *
     * @return self
     */
    public function setPhoneNumber(?string $phoneNumber): self
    {
        $this->phoneNumber = $phoneNumber;

        return $this;
    }

    /**
     * Specifies whether to permit authorizations on this cardholder's cards. Possible values are `active` or `inactive`.
     *
     * @return string
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Specifies whether to permit authorizations on this cardholder's cards. Possible values are `active` or `inactive`.
     *
     * @param string $status
     *
     * @return self
     */
    public function setStatus(?string $status): self
    {
        $this->status = $status;

        return $this;
    }

    /**
     * The type of cardholder. Possible values are `individual` or `business_entity`.
     *
     * @return string
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * The type of cardholder. Possible values are `individual` or `business_entity`.
     *
     * @param string $type
     *
     * @return self
     */
    public function setType(?string $type): self
    {
        $this->type = $type;

        return $this;
    }
}
