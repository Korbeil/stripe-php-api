<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Model;

class PaymentMethodDetails
{
    /**
     * @var PaymentMethodDetailsAchCreditTransfer
     */
    protected $achCreditTransfer;
    /**
     * @var PaymentMethodDetailsAchDebit
     */
    protected $achDebit;
    /**
     * @var PaymentMethodDetailsAlipay
     */
    protected $alipay;
    /**
     * @var PaymentMethodDetailsBancontact
     */
    protected $bancontact;
    /**
     * @var PaymentMethodDetailsCard
     */
    protected $card;
    /**
     * @var PaymentMethodDetailsCardPresent
     */
    protected $cardPresent;
    /**
     * @var PaymentMethodDetailsEps
     */
    protected $eps;
    /**
     * @var PaymentMethodDetailsGiropay
     */
    protected $giropay;
    /**
     * @var PaymentMethodDetailsIdeal
     */
    protected $ideal;
    /**
     * @var PaymentMethodDetailsMultibanco
     */
    protected $multibanco;
    /**
     * @var PaymentMethodDetailsP24
     */
    protected $p24;
    /**
     * @var PaymentMethodDetailsSepaDebit
     */
    protected $sepaDebit;
    /**
     * @var PaymentMethodDetailsSofort
     */
    protected $sofort;
    /**
     * @var PaymentMethodDetailsStripeAccount
     */
    protected $stripeAccount;
    /**
     * The type of transaction-specific details of the payment method used in the payment, one of `ach_credit_transfer`, `alipay`, `bancontact`, `card`, `eps`, `giropay`, `ideal`, `multibanco`, `p24`, `sepa_debit`, or `sofort`.
    An additional hash is included on `payment_method_details` with a name matching this value.
    It contains information specific to the payment method.
     *
     * @var string
     */
    protected $type;
    /**
     * @var PaymentMethodDetailsWechat
     */
    protected $wechat;

    /**
     * @return PaymentMethodDetailsAchCreditTransfer
     */
    public function getAchCreditTransfer(): ?PaymentMethodDetailsAchCreditTransfer
    {
        return $this->achCreditTransfer;
    }

    /**
     * @param PaymentMethodDetailsAchCreditTransfer $achCreditTransfer
     *
     * @return self
     */
    public function setAchCreditTransfer(?PaymentMethodDetailsAchCreditTransfer $achCreditTransfer): self
    {
        $this->achCreditTransfer = $achCreditTransfer;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsAchDebit
     */
    public function getAchDebit(): ?PaymentMethodDetailsAchDebit
    {
        return $this->achDebit;
    }

    /**
     * @param PaymentMethodDetailsAchDebit $achDebit
     *
     * @return self
     */
    public function setAchDebit(?PaymentMethodDetailsAchDebit $achDebit): self
    {
        $this->achDebit = $achDebit;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsAlipay
     */
    public function getAlipay(): ?PaymentMethodDetailsAlipay
    {
        return $this->alipay;
    }

    /**
     * @param PaymentMethodDetailsAlipay $alipay
     *
     * @return self
     */
    public function setAlipay(?PaymentMethodDetailsAlipay $alipay): self
    {
        $this->alipay = $alipay;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsBancontact
     */
    public function getBancontact(): ?PaymentMethodDetailsBancontact
    {
        return $this->bancontact;
    }

    /**
     * @param PaymentMethodDetailsBancontact $bancontact
     *
     * @return self
     */
    public function setBancontact(?PaymentMethodDetailsBancontact $bancontact): self
    {
        $this->bancontact = $bancontact;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsCard
     */
    public function getCard(): ?PaymentMethodDetailsCard
    {
        return $this->card;
    }

    /**
     * @param PaymentMethodDetailsCard $card
     *
     * @return self
     */
    public function setCard(?PaymentMethodDetailsCard $card): self
    {
        $this->card = $card;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsCardPresent
     */
    public function getCardPresent(): ?PaymentMethodDetailsCardPresent
    {
        return $this->cardPresent;
    }

    /**
     * @param PaymentMethodDetailsCardPresent $cardPresent
     *
     * @return self
     */
    public function setCardPresent(?PaymentMethodDetailsCardPresent $cardPresent): self
    {
        $this->cardPresent = $cardPresent;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsEps
     */
    public function getEps(): ?PaymentMethodDetailsEps
    {
        return $this->eps;
    }

    /**
     * @param PaymentMethodDetailsEps $eps
     *
     * @return self
     */
    public function setEps(?PaymentMethodDetailsEps $eps): self
    {
        $this->eps = $eps;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsGiropay
     */
    public function getGiropay(): ?PaymentMethodDetailsGiropay
    {
        return $this->giropay;
    }

    /**
     * @param PaymentMethodDetailsGiropay $giropay
     *
     * @return self
     */
    public function setGiropay(?PaymentMethodDetailsGiropay $giropay): self
    {
        $this->giropay = $giropay;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsIdeal
     */
    public function getIdeal(): ?PaymentMethodDetailsIdeal
    {
        return $this->ideal;
    }

    /**
     * @param PaymentMethodDetailsIdeal $ideal
     *
     * @return self
     */
    public function setIdeal(?PaymentMethodDetailsIdeal $ideal): self
    {
        $this->ideal = $ideal;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsMultibanco
     */
    public function getMultibanco(): ?PaymentMethodDetailsMultibanco
    {
        return $this->multibanco;
    }

    /**
     * @param PaymentMethodDetailsMultibanco $multibanco
     *
     * @return self
     */
    public function setMultibanco(?PaymentMethodDetailsMultibanco $multibanco): self
    {
        $this->multibanco = $multibanco;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsP24
     */
    public function getP24(): ?PaymentMethodDetailsP24
    {
        return $this->p24;
    }

    /**
     * @param PaymentMethodDetailsP24 $p24
     *
     * @return self
     */
    public function setP24(?PaymentMethodDetailsP24 $p24): self
    {
        $this->p24 = $p24;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsSepaDebit
     */
    public function getSepaDebit(): ?PaymentMethodDetailsSepaDebit
    {
        return $this->sepaDebit;
    }

    /**
     * @param PaymentMethodDetailsSepaDebit $sepaDebit
     *
     * @return self
     */
    public function setSepaDebit(?PaymentMethodDetailsSepaDebit $sepaDebit): self
    {
        $this->sepaDebit = $sepaDebit;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsSofort
     */
    public function getSofort(): ?PaymentMethodDetailsSofort
    {
        return $this->sofort;
    }

    /**
     * @param PaymentMethodDetailsSofort $sofort
     *
     * @return self
     */
    public function setSofort(?PaymentMethodDetailsSofort $sofort): self
    {
        $this->sofort = $sofort;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsStripeAccount
     */
    public function getStripeAccount(): ?PaymentMethodDetailsStripeAccount
    {
        return $this->stripeAccount;
    }

    /**
     * @param PaymentMethodDetailsStripeAccount $stripeAccount
     *
     * @return self
     */
    public function setStripeAccount(?PaymentMethodDetailsStripeAccount $stripeAccount): self
    {
        $this->stripeAccount = $stripeAccount;

        return $this;
    }

    /**
     * The type of transaction-specific details of the payment method used in the payment, one of `ach_credit_transfer`, `alipay`, `bancontact`, `card`, `eps`, `giropay`, `ideal`, `multibanco`, `p24`, `sepa_debit`, or `sofort`.
    An additional hash is included on `payment_method_details` with a name matching this value.
    It contains information specific to the payment method.
     *
     * @return string
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * The type of transaction-specific details of the payment method used in the payment, one of `ach_credit_transfer`, `alipay`, `bancontact`, `card`, `eps`, `giropay`, `ideal`, `multibanco`, `p24`, `sepa_debit`, or `sofort`.
    An additional hash is included on `payment_method_details` with a name matching this value.
    It contains information specific to the payment method.
     *
     * @param string $type
     *
     * @return self
     */
    public function setType(?string $type): self
    {
        $this->type = $type;

        return $this;
    }

    /**
     * @return PaymentMethodDetailsWechat
     */
    public function getWechat(): ?PaymentMethodDetailsWechat
    {
        return $this->wechat;
    }

    /**
     * @param PaymentMethodDetailsWechat $wechat
     *
     * @return self
     */
    public function setWechat(?PaymentMethodDetailsWechat $wechat): self
    {
        $this->wechat = $wechat;

        return $this;
    }
}
