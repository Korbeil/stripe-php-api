<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Model;

class ApiErrors
{
    /**
     * For card errors, the ID of the failed charge.
     *
     * @var string
     */
    protected $charge;
    /**
     * For some errors that could be handled programmatically, a short string indicating the [error code](https://stripe.com/docs/error-codes) reported.
     *
     * @var string
     */
    protected $code;
    /**
     * For card errors resulting from a card issuer decline, a short string indicating the [card issuer's reason for the decline](https://stripe.com/docs/declines#issuer-declines) if they provide one.
     *
     * @var string
     */
    protected $declineCode;
    /**
     * A URL to more information about the [error code](https://stripe.com/docs/error-codes) reported.
     *
     * @var string
     */
    protected $docUrl;
    /**
     * A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.
     *
     * @var string
     */
    protected $message;
    /**
     * If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.
     *
     * @var string
     */
    protected $param;
    /**
     * @var PaymentIntent
     */
    protected $paymentIntent;
    /**
     * @var PaymentMethod
     */
    protected $paymentMethod;
    /**
     * @var BankAccount
     */
    protected $source;
    /**
     * The type of error returned. One of `api_connection_error`, `api_error`, `authentication_error`, `card_error`, `idempotency_error`, `invalid_request_error`, or `rate_limit_error`.
     *
     * @var string
     */
    protected $type;

    /**
     * For card errors, the ID of the failed charge.
     *
     * @return string
     */
    public function getCharge(): ?string
    {
        return $this->charge;
    }

    /**
     * For card errors, the ID of the failed charge.
     *
     * @param string $charge
     *
     * @return self
     */
    public function setCharge(?string $charge): self
    {
        $this->charge = $charge;

        return $this;
    }

    /**
     * For some errors that could be handled programmatically, a short string indicating the [error code](https://stripe.com/docs/error-codes) reported.
     *
     * @return string
     */
    public function getCode(): ?string
    {
        return $this->code;
    }

    /**
     * For some errors that could be handled programmatically, a short string indicating the [error code](https://stripe.com/docs/error-codes) reported.
     *
     * @param string $code
     *
     * @return self
     */
    public function setCode(?string $code): self
    {
        $this->code = $code;

        return $this;
    }

    /**
     * For card errors resulting from a card issuer decline, a short string indicating the [card issuer's reason for the decline](https://stripe.com/docs/declines#issuer-declines) if they provide one.
     *
     * @return string
     */
    public function getDeclineCode(): ?string
    {
        return $this->declineCode;
    }

    /**
     * For card errors resulting from a card issuer decline, a short string indicating the [card issuer's reason for the decline](https://stripe.com/docs/declines#issuer-declines) if they provide one.
     *
     * @param string $declineCode
     *
     * @return self
     */
    public function setDeclineCode(?string $declineCode): self
    {
        $this->declineCode = $declineCode;

        return $this;
    }

    /**
     * A URL to more information about the [error code](https://stripe.com/docs/error-codes) reported.
     *
     * @return string
     */
    public function getDocUrl(): ?string
    {
        return $this->docUrl;
    }

    /**
     * A URL to more information about the [error code](https://stripe.com/docs/error-codes) reported.
     *
     * @param string $docUrl
     *
     * @return self
     */
    public function setDocUrl(?string $docUrl): self
    {
        $this->docUrl = $docUrl;

        return $this;
    }

    /**
     * A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.
     *
     * @return string
     */
    public function getMessage(): ?string
    {
        return $this->message;
    }

    /**
     * A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.
     *
     * @param string $message
     *
     * @return self
     */
    public function setMessage(?string $message): self
    {
        $this->message = $message;

        return $this;
    }

    /**
     * If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.
     *
     * @return string
     */
    public function getParam(): ?string
    {
        return $this->param;
    }

    /**
     * If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.
     *
     * @param string $param
     *
     * @return self
     */
    public function setParam(?string $param): self
    {
        $this->param = $param;

        return $this;
    }

    /**
     * @return PaymentIntent
     */
    public function getPaymentIntent(): ?PaymentIntent
    {
        return $this->paymentIntent;
    }

    /**
     * @param PaymentIntent $paymentIntent
     *
     * @return self
     */
    public function setPaymentIntent(?PaymentIntent $paymentIntent): self
    {
        $this->paymentIntent = $paymentIntent;

        return $this;
    }

    /**
     * @return PaymentMethod
     */
    public function getPaymentMethod(): ?PaymentMethod
    {
        return $this->paymentMethod;
    }

    /**
     * @param PaymentMethod $paymentMethod
     *
     * @return self
     */
    public function setPaymentMethod(?PaymentMethod $paymentMethod): self
    {
        $this->paymentMethod = $paymentMethod;

        return $this;
    }

    /**
     * @return BankAccount
     */
    public function getSource(): ?BankAccount
    {
        return $this->source;
    }

    /**
     * @param BankAccount $source
     *
     * @return self
     */
    public function setSource(?BankAccount $source): self
    {
        $this->source = $source;

        return $this;
    }

    /**
     * The type of error returned. One of `api_connection_error`, `api_error`, `authentication_error`, `card_error`, `idempotency_error`, `invalid_request_error`, or `rate_limit_error`.
     *
     * @return string
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * The type of error returned. One of `api_connection_error`, `api_error`, `authentication_error`, `card_error`, `idempotency_error`, `invalid_request_error`, or `rate_limit_error`.
     *
     * @param string $type
     *
     * @return self
     */
    public function setType(?string $type): self
    {
        $this->type = $type;

        return $this;
    }
}
