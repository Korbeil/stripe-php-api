<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Model;

class TransferReversal
{
    /**
     * Amount, in %s.
     *
     * @var int
     */
    protected $amount;
    /**
     * Balance transaction that describes the impact on your account balance.
     *
     * @var string
     */
    protected $balanceTransaction;
    /**
     * Time at which the object was created. Measured in seconds since the Unix epoch.
     *
     * @var int
     */
    protected $created;
    /**
     * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
     *
     * @var string
     */
    protected $currency;
    /**
     * Linked payment refund for the transfer reversal.
     *
     * @var string
     */
    protected $destinationPaymentRefund;
    /**
     * Unique identifier for the object.
     *
     * @var string
     */
    protected $id;
    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
     *
     * @var mixed
     */
    protected $metadata;
    /**
     * String representing the object's type. Objects of the same type share the same value.
     *
     * @var string
     */
    protected $object;
    /**
     * ID of the refund responsible for the transfer reversal.
     *
     * @var string
     */
    protected $sourceRefund;
    /**
     * ID of the transfer that was reversed.
     *
     * @var string
     */
    protected $transfer;

    /**
     * Amount, in %s.
     *
     * @return int
     */
    public function getAmount(): ?int
    {
        return $this->amount;
    }

    /**
     * Amount, in %s.
     *
     * @param int $amount
     *
     * @return self
     */
    public function setAmount(?int $amount): self
    {
        $this->amount = $amount;

        return $this;
    }

    /**
     * Balance transaction that describes the impact on your account balance.
     *
     * @return string
     */
    public function getBalanceTransaction(): ?string
    {
        return $this->balanceTransaction;
    }

    /**
     * Balance transaction that describes the impact on your account balance.
     *
     * @param string $balanceTransaction
     *
     * @return self
     */
    public function setBalanceTransaction(?string $balanceTransaction): self
    {
        $this->balanceTransaction = $balanceTransaction;

        return $this;
    }

    /**
     * Time at which the object was created. Measured in seconds since the Unix epoch.
     *
     * @return int
     */
    public function getCreated(): ?int
    {
        return $this->created;
    }

    /**
     * Time at which the object was created. Measured in seconds since the Unix epoch.
     *
     * @param int $created
     *
     * @return self
     */
    public function setCreated(?int $created): self
    {
        $this->created = $created;

        return $this;
    }

    /**
     * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
     *
     * @return string
     */
    public function getCurrency(): ?string
    {
        return $this->currency;
    }

    /**
     * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
     *
     * @param string $currency
     *
     * @return self
     */
    public function setCurrency(?string $currency): self
    {
        $this->currency = $currency;

        return $this;
    }

    /**
     * Linked payment refund for the transfer reversal.
     *
     * @return string
     */
    public function getDestinationPaymentRefund(): ?string
    {
        return $this->destinationPaymentRefund;
    }

    /**
     * Linked payment refund for the transfer reversal.
     *
     * @param string $destinationPaymentRefund
     *
     * @return self
     */
    public function setDestinationPaymentRefund(?string $destinationPaymentRefund): self
    {
        $this->destinationPaymentRefund = $destinationPaymentRefund;

        return $this;
    }

    /**
     * Unique identifier for the object.
     *
     * @return string
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Unique identifier for the object.
     *
     * @param string $id
     *
     * @return self
     */
    public function setId(?string $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
     *
     * @return mixed
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
     *
     * @param mixed $metadata
     *
     * @return self
     */
    public function setMetadata($metadata): self
    {
        $this->metadata = $metadata;

        return $this;
    }

    /**
     * String representing the object's type. Objects of the same type share the same value.
     *
     * @return string
     */
    public function getObject(): ?string
    {
        return $this->object;
    }

    /**
     * String representing the object's type. Objects of the same type share the same value.
     *
     * @param string $object
     *
     * @return self
     */
    public function setObject(?string $object): self
    {
        $this->object = $object;

        return $this;
    }

    /**
     * ID of the refund responsible for the transfer reversal.
     *
     * @return string
     */
    public function getSourceRefund(): ?string
    {
        return $this->sourceRefund;
    }

    /**
     * ID of the refund responsible for the transfer reversal.
     *
     * @param string $sourceRefund
     *
     * @return self
     */
    public function setSourceRefund(?string $sourceRefund): self
    {
        $this->sourceRefund = $sourceRefund;

        return $this;
    }

    /**
     * ID of the transfer that was reversed.
     *
     * @return string
     */
    public function getTransfer(): ?string
    {
        return $this->transfer;
    }

    /**
     * ID of the transfer that was reversed.
     *
     * @param string $transfer
     *
     * @return self
     */
    public function setTransfer(?string $transfer): self
    {
        $this->transfer = $transfer;

        return $this;
    }
}
