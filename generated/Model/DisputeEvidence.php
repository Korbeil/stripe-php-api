<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Model;

class DisputeEvidence
{
    /**
     * Any server or activity logs showing proof that the customer accessed or downloaded the purchased digital product. This information should include IP addresses, corresponding timestamps, and any detailed recorded activity.
     *
     * @var string
     */
    protected $accessActivityLog;
    /**
     * The billing address provided by the customer.
     *
     * @var string
     */
    protected $billingAddress;
    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your subscription cancellation policy, as shown to the customer.
     *
     * @var string
     */
    protected $cancellationPolicy;
    /**
     * An explanation of how and when the customer was shown your refund policy prior to purchase.
     *
     * @var string
     */
    protected $cancellationPolicyDisclosure;
    /**
     * A justification for why the customer's subscription was not canceled.
     *
     * @var string
     */
    protected $cancellationRebuttal;
    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any communication with the customer that you feel is relevant to your case. Examples include emails proving that the customer received the product or service, or demonstrating their use of or satisfaction with the product or service.
     *
     * @var string
     */
    protected $customerCommunication;
    /**
     * The email address of the customer.
     *
     * @var string
     */
    protected $customerEmailAddress;
    /**
     * The name of the customer.
     *
     * @var string
     */
    protected $customerName;
    /**
     * The IP address that the customer used when making the purchase.
     *
     * @var string
     */
    protected $customerPurchaseIp;
    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A relevant document or contract showing the customer's signature.
     *
     * @var string
     */
    protected $customerSignature;
    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation for the prior charge that can uniquely identify the charge, such as a receipt, shipping label, work order, etc. This document should be paired with a similar document from the disputed payment that proves the two payments are separate.
     *
     * @var string
     */
    protected $duplicateChargeDocumentation;
    /**
     * An explanation of the difference between the disputed charge versus the prior charge that appears to be a duplicate.
     *
     * @var string
     */
    protected $duplicateChargeExplanation;
    /**
     * The Stripe ID for the prior charge which appears to be a duplicate of the disputed charge.
     *
     * @var string
     */
    protected $duplicateChargeId;
    /**
     * A description of the product or service that was sold.
     *
     * @var string
     */
    protected $productDescription;
    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any receipt or message sent to the customer notifying them of the charge.
     *
     * @var string
     */
    protected $receipt;
    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your refund policy, as shown to the customer.
     *
     * @var string
     */
    protected $refundPolicy;
    /**
     * Documentation demonstrating that the customer was shown your refund policy prior to purchase.
     *
     * @var string
     */
    protected $refundPolicyDisclosure;
    /**
     * A justification for why the customer is not entitled to a refund.
     *
     * @var string
     */
    protected $refundRefusalExplanation;
    /**
     * The date on which the customer received or began receiving the purchased service, in a clear human-readable format.
     *
     * @var string
     */
    protected $serviceDate;
    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a service was provided to the customer. This could include a copy of a signed contract, work order, or other form of written agreement.
     *
     * @var string
     */
    protected $serviceDocumentation;
    /**
     * The address to which a physical product was shipped. You should try to include as complete address information as possible.
     *
     * @var string
     */
    protected $shippingAddress;
    /**
     * The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc. If multiple carriers were used for this purchase, please separate them with commas.
     *
     * @var string
     */
    protected $shippingCarrier;
    /**
     * The date on which a physical product began its route to the shipping address, in a clear human-readable format.
     *
     * @var string
     */
    protected $shippingDate;
    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a product was shipped to the customer at the same address the customer provided to you. This could include a copy of the shipment receipt, shipping label, etc. It should show the customer's full shipping address, if possible.
     *
     * @var string
     */
    protected $shippingDocumentation;
    /**
     * The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
     *
     * @var string
     */
    protected $shippingTrackingNumber;
    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any additional evidence or statements.
     *
     * @var string
     */
    protected $uncategorizedFile;
    /**
     * Any additional evidence or statements.
     *
     * @var string
     */
    protected $uncategorizedText;

    /**
     * Any server or activity logs showing proof that the customer accessed or downloaded the purchased digital product. This information should include IP addresses, corresponding timestamps, and any detailed recorded activity.
     *
     * @return string
     */
    public function getAccessActivityLog(): ?string
    {
        return $this->accessActivityLog;
    }

    /**
     * Any server or activity logs showing proof that the customer accessed or downloaded the purchased digital product. This information should include IP addresses, corresponding timestamps, and any detailed recorded activity.
     *
     * @param string $accessActivityLog
     *
     * @return self
     */
    public function setAccessActivityLog(?string $accessActivityLog): self
    {
        $this->accessActivityLog = $accessActivityLog;

        return $this;
    }

    /**
     * The billing address provided by the customer.
     *
     * @return string
     */
    public function getBillingAddress(): ?string
    {
        return $this->billingAddress;
    }

    /**
     * The billing address provided by the customer.
     *
     * @param string $billingAddress
     *
     * @return self
     */
    public function setBillingAddress(?string $billingAddress): self
    {
        $this->billingAddress = $billingAddress;

        return $this;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your subscription cancellation policy, as shown to the customer.
     *
     * @return string
     */
    public function getCancellationPolicy(): ?string
    {
        return $this->cancellationPolicy;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your subscription cancellation policy, as shown to the customer.
     *
     * @param string $cancellationPolicy
     *
     * @return self
     */
    public function setCancellationPolicy(?string $cancellationPolicy): self
    {
        $this->cancellationPolicy = $cancellationPolicy;

        return $this;
    }

    /**
     * An explanation of how and when the customer was shown your refund policy prior to purchase.
     *
     * @return string
     */
    public function getCancellationPolicyDisclosure(): ?string
    {
        return $this->cancellationPolicyDisclosure;
    }

    /**
     * An explanation of how and when the customer was shown your refund policy prior to purchase.
     *
     * @param string $cancellationPolicyDisclosure
     *
     * @return self
     */
    public function setCancellationPolicyDisclosure(?string $cancellationPolicyDisclosure): self
    {
        $this->cancellationPolicyDisclosure = $cancellationPolicyDisclosure;

        return $this;
    }

    /**
     * A justification for why the customer's subscription was not canceled.
     *
     * @return string
     */
    public function getCancellationRebuttal(): ?string
    {
        return $this->cancellationRebuttal;
    }

    /**
     * A justification for why the customer's subscription was not canceled.
     *
     * @param string $cancellationRebuttal
     *
     * @return self
     */
    public function setCancellationRebuttal(?string $cancellationRebuttal): self
    {
        $this->cancellationRebuttal = $cancellationRebuttal;

        return $this;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any communication with the customer that you feel is relevant to your case. Examples include emails proving that the customer received the product or service, or demonstrating their use of or satisfaction with the product or service.
     *
     * @return string
     */
    public function getCustomerCommunication(): ?string
    {
        return $this->customerCommunication;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any communication with the customer that you feel is relevant to your case. Examples include emails proving that the customer received the product or service, or demonstrating their use of or satisfaction with the product or service.
     *
     * @param string $customerCommunication
     *
     * @return self
     */
    public function setCustomerCommunication(?string $customerCommunication): self
    {
        $this->customerCommunication = $customerCommunication;

        return $this;
    }

    /**
     * The email address of the customer.
     *
     * @return string
     */
    public function getCustomerEmailAddress(): ?string
    {
        return $this->customerEmailAddress;
    }

    /**
     * The email address of the customer.
     *
     * @param string $customerEmailAddress
     *
     * @return self
     */
    public function setCustomerEmailAddress(?string $customerEmailAddress): self
    {
        $this->customerEmailAddress = $customerEmailAddress;

        return $this;
    }

    /**
     * The name of the customer.
     *
     * @return string
     */
    public function getCustomerName(): ?string
    {
        return $this->customerName;
    }

    /**
     * The name of the customer.
     *
     * @param string $customerName
     *
     * @return self
     */
    public function setCustomerName(?string $customerName): self
    {
        $this->customerName = $customerName;

        return $this;
    }

    /**
     * The IP address that the customer used when making the purchase.
     *
     * @return string
     */
    public function getCustomerPurchaseIp(): ?string
    {
        return $this->customerPurchaseIp;
    }

    /**
     * The IP address that the customer used when making the purchase.
     *
     * @param string $customerPurchaseIp
     *
     * @return self
     */
    public function setCustomerPurchaseIp(?string $customerPurchaseIp): self
    {
        $this->customerPurchaseIp = $customerPurchaseIp;

        return $this;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A relevant document or contract showing the customer's signature.
     *
     * @return string
     */
    public function getCustomerSignature(): ?string
    {
        return $this->customerSignature;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A relevant document or contract showing the customer's signature.
     *
     * @param string $customerSignature
     *
     * @return self
     */
    public function setCustomerSignature(?string $customerSignature): self
    {
        $this->customerSignature = $customerSignature;

        return $this;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation for the prior charge that can uniquely identify the charge, such as a receipt, shipping label, work order, etc. This document should be paired with a similar document from the disputed payment that proves the two payments are separate.
     *
     * @return string
     */
    public function getDuplicateChargeDocumentation(): ?string
    {
        return $this->duplicateChargeDocumentation;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation for the prior charge that can uniquely identify the charge, such as a receipt, shipping label, work order, etc. This document should be paired with a similar document from the disputed payment that proves the two payments are separate.
     *
     * @param string $duplicateChargeDocumentation
     *
     * @return self
     */
    public function setDuplicateChargeDocumentation(?string $duplicateChargeDocumentation): self
    {
        $this->duplicateChargeDocumentation = $duplicateChargeDocumentation;

        return $this;
    }

    /**
     * An explanation of the difference between the disputed charge versus the prior charge that appears to be a duplicate.
     *
     * @return string
     */
    public function getDuplicateChargeExplanation(): ?string
    {
        return $this->duplicateChargeExplanation;
    }

    /**
     * An explanation of the difference between the disputed charge versus the prior charge that appears to be a duplicate.
     *
     * @param string $duplicateChargeExplanation
     *
     * @return self
     */
    public function setDuplicateChargeExplanation(?string $duplicateChargeExplanation): self
    {
        $this->duplicateChargeExplanation = $duplicateChargeExplanation;

        return $this;
    }

    /**
     * The Stripe ID for the prior charge which appears to be a duplicate of the disputed charge.
     *
     * @return string
     */
    public function getDuplicateChargeId(): ?string
    {
        return $this->duplicateChargeId;
    }

    /**
     * The Stripe ID for the prior charge which appears to be a duplicate of the disputed charge.
     *
     * @param string $duplicateChargeId
     *
     * @return self
     */
    public function setDuplicateChargeId(?string $duplicateChargeId): self
    {
        $this->duplicateChargeId = $duplicateChargeId;

        return $this;
    }

    /**
     * A description of the product or service that was sold.
     *
     * @return string
     */
    public function getProductDescription(): ?string
    {
        return $this->productDescription;
    }

    /**
     * A description of the product or service that was sold.
     *
     * @param string $productDescription
     *
     * @return self
     */
    public function setProductDescription(?string $productDescription): self
    {
        $this->productDescription = $productDescription;

        return $this;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any receipt or message sent to the customer notifying them of the charge.
     *
     * @return string
     */
    public function getReceipt(): ?string
    {
        return $this->receipt;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any receipt or message sent to the customer notifying them of the charge.
     *
     * @param string $receipt
     *
     * @return self
     */
    public function setReceipt(?string $receipt): self
    {
        $this->receipt = $receipt;

        return $this;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your refund policy, as shown to the customer.
     *
     * @return string
     */
    public function getRefundPolicy(): ?string
    {
        return $this->refundPolicy;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your refund policy, as shown to the customer.
     *
     * @param string $refundPolicy
     *
     * @return self
     */
    public function setRefundPolicy(?string $refundPolicy): self
    {
        $this->refundPolicy = $refundPolicy;

        return $this;
    }

    /**
     * Documentation demonstrating that the customer was shown your refund policy prior to purchase.
     *
     * @return string
     */
    public function getRefundPolicyDisclosure(): ?string
    {
        return $this->refundPolicyDisclosure;
    }

    /**
     * Documentation demonstrating that the customer was shown your refund policy prior to purchase.
     *
     * @param string $refundPolicyDisclosure
     *
     * @return self
     */
    public function setRefundPolicyDisclosure(?string $refundPolicyDisclosure): self
    {
        $this->refundPolicyDisclosure = $refundPolicyDisclosure;

        return $this;
    }

    /**
     * A justification for why the customer is not entitled to a refund.
     *
     * @return string
     */
    public function getRefundRefusalExplanation(): ?string
    {
        return $this->refundRefusalExplanation;
    }

    /**
     * A justification for why the customer is not entitled to a refund.
     *
     * @param string $refundRefusalExplanation
     *
     * @return self
     */
    public function setRefundRefusalExplanation(?string $refundRefusalExplanation): self
    {
        $this->refundRefusalExplanation = $refundRefusalExplanation;

        return $this;
    }

    /**
     * The date on which the customer received or began receiving the purchased service, in a clear human-readable format.
     *
     * @return string
     */
    public function getServiceDate(): ?string
    {
        return $this->serviceDate;
    }

    /**
     * The date on which the customer received or began receiving the purchased service, in a clear human-readable format.
     *
     * @param string $serviceDate
     *
     * @return self
     */
    public function setServiceDate(?string $serviceDate): self
    {
        $this->serviceDate = $serviceDate;

        return $this;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a service was provided to the customer. This could include a copy of a signed contract, work order, or other form of written agreement.
     *
     * @return string
     */
    public function getServiceDocumentation(): ?string
    {
        return $this->serviceDocumentation;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a service was provided to the customer. This could include a copy of a signed contract, work order, or other form of written agreement.
     *
     * @param string $serviceDocumentation
     *
     * @return self
     */
    public function setServiceDocumentation(?string $serviceDocumentation): self
    {
        $this->serviceDocumentation = $serviceDocumentation;

        return $this;
    }

    /**
     * The address to which a physical product was shipped. You should try to include as complete address information as possible.
     *
     * @return string
     */
    public function getShippingAddress(): ?string
    {
        return $this->shippingAddress;
    }

    /**
     * The address to which a physical product was shipped. You should try to include as complete address information as possible.
     *
     * @param string $shippingAddress
     *
     * @return self
     */
    public function setShippingAddress(?string $shippingAddress): self
    {
        $this->shippingAddress = $shippingAddress;

        return $this;
    }

    /**
     * The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc. If multiple carriers were used for this purchase, please separate them with commas.
     *
     * @return string
     */
    public function getShippingCarrier(): ?string
    {
        return $this->shippingCarrier;
    }

    /**
     * The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc. If multiple carriers were used for this purchase, please separate them with commas.
     *
     * @param string $shippingCarrier
     *
     * @return self
     */
    public function setShippingCarrier(?string $shippingCarrier): self
    {
        $this->shippingCarrier = $shippingCarrier;

        return $this;
    }

    /**
     * The date on which a physical product began its route to the shipping address, in a clear human-readable format.
     *
     * @return string
     */
    public function getShippingDate(): ?string
    {
        return $this->shippingDate;
    }

    /**
     * The date on which a physical product began its route to the shipping address, in a clear human-readable format.
     *
     * @param string $shippingDate
     *
     * @return self
     */
    public function setShippingDate(?string $shippingDate): self
    {
        $this->shippingDate = $shippingDate;

        return $this;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a product was shipped to the customer at the same address the customer provided to you. This could include a copy of the shipment receipt, shipping label, etc. It should show the customer's full shipping address, if possible.
     *
     * @return string
     */
    public function getShippingDocumentation(): ?string
    {
        return $this->shippingDocumentation;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Documentation showing proof that a product was shipped to the customer at the same address the customer provided to you. This could include a copy of the shipment receipt, shipping label, etc. It should show the customer's full shipping address, if possible.
     *
     * @param string $shippingDocumentation
     *
     * @return self
     */
    public function setShippingDocumentation(?string $shippingDocumentation): self
    {
        $this->shippingDocumentation = $shippingDocumentation;

        return $this;
    }

    /**
     * The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
     *
     * @return string
     */
    public function getShippingTrackingNumber(): ?string
    {
        return $this->shippingTrackingNumber;
    }

    /**
     * The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
     *
     * @param string $shippingTrackingNumber
     *
     * @return self
     */
    public function setShippingTrackingNumber(?string $shippingTrackingNumber): self
    {
        $this->shippingTrackingNumber = $shippingTrackingNumber;

        return $this;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any additional evidence or statements.
     *
     * @return string
     */
    public function getUncategorizedFile(): ?string
    {
        return $this->uncategorizedFile;
    }

    /**
     * (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any additional evidence or statements.
     *
     * @param string $uncategorizedFile
     *
     * @return self
     */
    public function setUncategorizedFile(?string $uncategorizedFile): self
    {
        $this->uncategorizedFile = $uncategorizedFile;

        return $this;
    }

    /**
     * Any additional evidence or statements.
     *
     * @return string
     */
    public function getUncategorizedText(): ?string
    {
        return $this->uncategorizedText;
    }

    /**
     * Any additional evidence or statements.
     *
     * @param string $uncategorizedText
     *
     * @return self
     */
    public function setUncategorizedText(?string $uncategorizedText): self
    {
        $this->uncategorizedText = $uncategorizedText;

        return $this;
    }
}
