<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Model;

class LegalEntityVerificationDocument
{
    /**
     * The back of an ID returned by a [file upload](#create_file) with a `purpose` value of `identity_document`.
     *
     * @var string
     */
    protected $back;
    /**
     * A user-displayable string describing the verification state of this document. For example, if a document is uploaded and the picture is too fuzzy, this may say "Identity document is too unclear to read".
     *
     * @var string
     */
    protected $details;
    /**
     * One of `document_corrupt`, `document_failed_copy`, `document_not_readable`, `document_failed_greyscale`, `document_not_uploaded`, `document_id_type_not_supported`, `document_id_country_not_supported`, `document_failed_other`, `document_fraudulent`, `document_invalid`, `document_manipulated`, `document_missing_back`, `document_missing_front`, `document_photo_mismatch`, `document_too_large`, or `document_failed_test_mode`. A machine-readable code specifying the verification state for this document.
     *
     * @var string
     */
    protected $detailsCode;
    /**
     * The front of an ID returned by a [file upload](#create_file) with a `purpose` value of `identity_document`.
     *
     * @var string
     */
    protected $front;

    /**
     * The back of an ID returned by a [file upload](#create_file) with a `purpose` value of `identity_document`.
     *
     * @return string
     */
    public function getBack(): ?string
    {
        return $this->back;
    }

    /**
     * The back of an ID returned by a [file upload](#create_file) with a `purpose` value of `identity_document`.
     *
     * @param string $back
     *
     * @return self
     */
    public function setBack(?string $back): self
    {
        $this->back = $back;

        return $this;
    }

    /**
     * A user-displayable string describing the verification state of this document. For example, if a document is uploaded and the picture is too fuzzy, this may say "Identity document is too unclear to read".
     *
     * @return string
     */
    public function getDetails(): ?string
    {
        return $this->details;
    }

    /**
     * A user-displayable string describing the verification state of this document. For example, if a document is uploaded and the picture is too fuzzy, this may say "Identity document is too unclear to read".
     *
     * @param string $details
     *
     * @return self
     */
    public function setDetails(?string $details): self
    {
        $this->details = $details;

        return $this;
    }

    /**
     * One of `document_corrupt`, `document_failed_copy`, `document_not_readable`, `document_failed_greyscale`, `document_not_uploaded`, `document_id_type_not_supported`, `document_id_country_not_supported`, `document_failed_other`, `document_fraudulent`, `document_invalid`, `document_manipulated`, `document_missing_back`, `document_missing_front`, `document_photo_mismatch`, `document_too_large`, or `document_failed_test_mode`. A machine-readable code specifying the verification state for this document.
     *
     * @return string
     */
    public function getDetailsCode(): ?string
    {
        return $this->detailsCode;
    }

    /**
     * One of `document_corrupt`, `document_failed_copy`, `document_not_readable`, `document_failed_greyscale`, `document_not_uploaded`, `document_id_type_not_supported`, `document_id_country_not_supported`, `document_failed_other`, `document_fraudulent`, `document_invalid`, `document_manipulated`, `document_missing_back`, `document_missing_front`, `document_photo_mismatch`, `document_too_large`, or `document_failed_test_mode`. A machine-readable code specifying the verification state for this document.
     *
     * @param string $detailsCode
     *
     * @return self
     */
    public function setDetailsCode(?string $detailsCode): self
    {
        $this->detailsCode = $detailsCode;

        return $this;
    }

    /**
     * The front of an ID returned by a [file upload](#create_file) with a `purpose` value of `identity_document`.
     *
     * @return string
     */
    public function getFront(): ?string
    {
        return $this->front;
    }

    /**
     * The front of an ID returned by a [file upload](#create_file) with a `purpose` value of `identity_document`.
     *
     * @param string $front
     *
     * @return self
     */
    public function setFront(?string $front): self
    {
        $this->front = $front;

        return $this;
    }
}
