<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Stripe\Api\Model;

class LineItem
{
    /**
     * The amount, in %s.
     *
     * @var int
     */
    protected $amount;
    /**
     * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
     *
     * @var string
     */
    protected $currency;
    /**
     * An arbitrary string attached to the object. Often useful for displaying to users.
     *
     * @var string
     */
    protected $description;
    /**
     * If true, discounts will apply to this line item. Always false for prorations.
     *
     * @var bool
     */
    protected $discountable;
    /**
     * Unique identifier for the object.
     *
     * @var string
     */
    protected $id;
    /**
     * @var string
     */
    protected $invoiceItem;
    /**
     * Whether this is a test line item.
     *
     * @var bool
     */
    protected $livemode;
    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Note that for line items with `type=subscription` this will reflect the metadata of the subscription that caused the line item to be created.
     *
     * @var mixed
     */
    protected $metadata;
    /**
     * String representing the object's type. Objects of the same type share the same value.
     *
     * @var string
     */
    protected $object;
    /**
     * @var InvoiceLineItemPeriod
     */
    protected $period;
    /**
     * @var Plan
     */
    protected $plan;
    /**
     * Whether this is a proration.
     *
     * @var bool
     */
    protected $proration;
    /**
     * The quantity of the subscription, if the line item is a subscription or a proration.
     *
     * @var int
     */
    protected $quantity;
    /**
     * The subscription that the invoice item pertains to, if any.
     *
     * @var string
     */
    protected $subscription;
    /**
     * The subscription item that generated this invoice item. Left empty if the line item is not an explicit result of a subscription.
     *
     * @var string
     */
    protected $subscriptionItem;
    /**
     * A string identifying the type of the source of this line item, either an `invoiceitem` or a `subscription`.
     *
     * @var string
     */
    protected $type;

    /**
     * The amount, in %s.
     *
     * @return int
     */
    public function getAmount(): ?int
    {
        return $this->amount;
    }

    /**
     * The amount, in %s.
     *
     * @param int $amount
     *
     * @return self
     */
    public function setAmount(?int $amount): self
    {
        $this->amount = $amount;

        return $this;
    }

    /**
     * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
     *
     * @return string
     */
    public function getCurrency(): ?string
    {
        return $this->currency;
    }

    /**
     * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
     *
     * @param string $currency
     *
     * @return self
     */
    public function setCurrency(?string $currency): self
    {
        $this->currency = $currency;

        return $this;
    }

    /**
     * An arbitrary string attached to the object. Often useful for displaying to users.
     *
     * @return string
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * An arbitrary string attached to the object. Often useful for displaying to users.
     *
     * @param string $description
     *
     * @return self
     */
    public function setDescription(?string $description): self
    {
        $this->description = $description;

        return $this;
    }

    /**
     * If true, discounts will apply to this line item. Always false for prorations.
     *
     * @return bool
     */
    public function getDiscountable(): ?bool
    {
        return $this->discountable;
    }

    /**
     * If true, discounts will apply to this line item. Always false for prorations.
     *
     * @param bool $discountable
     *
     * @return self
     */
    public function setDiscountable(?bool $discountable): self
    {
        $this->discountable = $discountable;

        return $this;
    }

    /**
     * Unique identifier for the object.
     *
     * @return string
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Unique identifier for the object.
     *
     * @param string $id
     *
     * @return self
     */
    public function setId(?string $id): self
    {
        $this->id = $id;

        return $this;
    }

    /**
     * @return string
     */
    public function getInvoiceItem(): ?string
    {
        return $this->invoiceItem;
    }

    /**
     * @param string $invoiceItem
     *
     * @return self
     */
    public function setInvoiceItem(?string $invoiceItem): self
    {
        $this->invoiceItem = $invoiceItem;

        return $this;
    }

    /**
     * Whether this is a test line item.
     *
     * @return bool
     */
    public function getLivemode(): ?bool
    {
        return $this->livemode;
    }

    /**
     * Whether this is a test line item.
     *
     * @param bool $livemode
     *
     * @return self
     */
    public function setLivemode(?bool $livemode): self
    {
        $this->livemode = $livemode;

        return $this;
    }

    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Note that for line items with `type=subscription` this will reflect the metadata of the subscription that caused the line item to be created.
     *
     * @return mixed
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Note that for line items with `type=subscription` this will reflect the metadata of the subscription that caused the line item to be created.
     *
     * @param mixed $metadata
     *
     * @return self
     */
    public function setMetadata($metadata): self
    {
        $this->metadata = $metadata;

        return $this;
    }

    /**
     * String representing the object's type. Objects of the same type share the same value.
     *
     * @return string
     */
    public function getObject(): ?string
    {
        return $this->object;
    }

    /**
     * String representing the object's type. Objects of the same type share the same value.
     *
     * @param string $object
     *
     * @return self
     */
    public function setObject(?string $object): self
    {
        $this->object = $object;

        return $this;
    }

    /**
     * @return InvoiceLineItemPeriod
     */
    public function getPeriod(): ?InvoiceLineItemPeriod
    {
        return $this->period;
    }

    /**
     * @param InvoiceLineItemPeriod $period
     *
     * @return self
     */
    public function setPeriod(?InvoiceLineItemPeriod $period): self
    {
        $this->period = $period;

        return $this;
    }

    /**
     * @return Plan
     */
    public function getPlan(): ?Plan
    {
        return $this->plan;
    }

    /**
     * @param Plan $plan
     *
     * @return self
     */
    public function setPlan(?Plan $plan): self
    {
        $this->plan = $plan;

        return $this;
    }

    /**
     * Whether this is a proration.
     *
     * @return bool
     */
    public function getProration(): ?bool
    {
        return $this->proration;
    }

    /**
     * Whether this is a proration.
     *
     * @param bool $proration
     *
     * @return self
     */
    public function setProration(?bool $proration): self
    {
        $this->proration = $proration;

        return $this;
    }

    /**
     * The quantity of the subscription, if the line item is a subscription or a proration.
     *
     * @return int
     */
    public function getQuantity(): ?int
    {
        return $this->quantity;
    }

    /**
     * The quantity of the subscription, if the line item is a subscription or a proration.
     *
     * @param int $quantity
     *
     * @return self
     */
    public function setQuantity(?int $quantity): self
    {
        $this->quantity = $quantity;

        return $this;
    }

    /**
     * The subscription that the invoice item pertains to, if any.
     *
     * @return string
     */
    public function getSubscription(): ?string
    {
        return $this->subscription;
    }

    /**
     * The subscription that the invoice item pertains to, if any.
     *
     * @param string $subscription
     *
     * @return self
     */
    public function setSubscription(?string $subscription): self
    {
        $this->subscription = $subscription;

        return $this;
    }

    /**
     * The subscription item that generated this invoice item. Left empty if the line item is not an explicit result of a subscription.
     *
     * @return string
     */
    public function getSubscriptionItem(): ?string
    {
        return $this->subscriptionItem;
    }

    /**
     * The subscription item that generated this invoice item. Left empty if the line item is not an explicit result of a subscription.
     *
     * @param string $subscriptionItem
     *
     * @return self
     */
    public function setSubscriptionItem(?string $subscriptionItem): self
    {
        $this->subscriptionItem = $subscriptionItem;

        return $this;
    }

    /**
     * A string identifying the type of the source of this line item, either an `invoiceitem` or a `subscription`.
     *
     * @return string
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * A string identifying the type of the source of this line item, either an `invoiceitem` or a `subscription`.
     *
     * @param string $type
     *
     * @return self
     */
    public function setType(?string $type): self
    {
        $this->type = $type;

        return $this;
    }
}
